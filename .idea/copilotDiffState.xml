<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/entity/DossierMedical.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/entity/DossierMedical.java" />
              <option name="originalContent" value="package com.example.brif04_appteleexpertise_medicale.entity;&#10;&#10;&#10;import jakarta.persistence.*;&#10;&#10;@Entity&#10;public class DossierMedical {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    private String antecedents;&#10;    private String allergies;&#10;    private String traitementEnCours;&#10;&#10;    @OneToOne(mappedBy = &quot;dossierMedical&quot;)&#10;    private Patient patient;&#10;&#10;    // Constructors&#10;    public DossierMedical() {}&#10;&#10;    public DossierMedical(Patient patient, String antecedents, String allergies, String traitementEnCours) {&#10;        this.patient = patient;&#10;        this.antecedents = antecedents;&#10;        this.allergies = allergies;&#10;        this.traitementEnCours = traitementEnCours;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;&#10;    public String getAntecedents() { return antecedents; }&#10;    public void setAntecedents(String antecedents) { this.antecedents = antecedents; }&#10;&#10;    public String getAllergies() { return allergies; }&#10;    public void setAllergies(String allergies) { this.allergies = allergies; }&#10;&#10;    public String getTraitementEnCours() { return traitementEnCours; }&#10;    public void setTraitementEnCours(String traitementEnCours) { this.traitementEnCours = traitementEnCours; }&#10;&#10;    public Patient getPatient() { return patient; }&#10;    public void setPatient(Patient patient) { this.patient = patient; }&#10;}" />
              <option name="updatedContent" value="package com.example.brif04_appteleexpertise_medicale.entity;&#10;&#10;&#10;import jakarta.persistence.*;&#10;&#10;@Entity&#10;public class DossierMedical {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    private String antecedents;&#10;    private String allergies;&#10;    private String traitementEnCours;&#10;&#10;    @OneToOne(mappedBy = &quot;dossierMedical&quot;)&#10;    private Patient patient;&#10;&#10;    // Constructors&#10;    public DossierMedical() {}&#10;&#10;    public DossierMedical(Patient patient, String antecedents, String allergies, String traitementEnCours) {&#10;        this.patient = patient;&#10;        this.antecedents = antecedents;&#10;        this.allergies = allergies;&#10;        this.traitementEnCours = traitementEnCours;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;&#10;    public String getAntecedents() { return antecedents; }&#10;    public void setAntecedents(String antecedents) { this.antecedents = antecedents; }&#10;&#10;    public String getAllergies() { return allergies; }&#10;    public void setAllergies(String allergies) { this.allergies = allergies; }&#10;&#10;    public String getTraitementEnCours() { return traitementEnCours; }&#10;    public void setTraitementEnCours(String traitementEnCours) { this.traitementEnCours = traitementEnCours; }&#10;&#10;    public Patient getPatient() { return patient; }&#10;    public void setPatient(Patient patient) { this.patient = patient; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/entity/SignesVitaux.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/entity/SignesVitaux.java" />
              <option name="originalContent" value="package com.example.brif04_appteleexpertise_medicale.entity;&#10;&#10;import jakarta.persistence.*;&#10;import java.time.LocalDateTime;&#10;&#10;@Entity&#10;public class SignesVitaux {&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    @OneToOne(mappedBy = &quot;signesVitaux&quot;)&#10;    private Patient patient;&#10;&#10;    private LocalDateTime dateSaisie;&#10;    private String tension;&#10;    private Integer frequenceCardiaque;&#10;    private Double temperature;&#10;    private Integer frequenceRespiratoire;&#10;    private Double poids;&#10;    private Double taille;&#10;&#10;    protected SignesVitaux(){}&#10;    &#10;    public SignesVitaux(Patient patient, String tension, Integer frequenceCardiaque, Double temperature, Integer frequenceRespiratoire, Double poids, Double taille){&#10;        this.patient = patient;&#10;        this.dateSaisie = LocalDateTime.now();&#10;        this.tension = tension;&#10;        this.frequenceCardiaque = frequenceCardiaque;&#10;        this.temperature = temperature;&#10;        this.frequenceRespiratoire = frequenceRespiratoire;&#10;        this.poids = poids;&#10;        this.taille = taille;&#10;    }&#10;    &#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;    public Patient getPatient() { return patient; }&#10;    public void setPatient(Patient patient) { this.patient = patient; }&#10;    public LocalDateTime getDateSaisie() { return dateSaisie; }&#10;    public void setDateSaisie(LocalDateTime dateSaisie) { this.dateSaisie = dateSaisie; }&#10;    public String getTension() { return tension; }&#10;    public void setTension(String tension) { this.tension = tension; }&#10;    public Integer getFrequenceCardiaque() { return frequenceCardiaque; }&#10;    public void setFrequenceCardiaque(Integer frequenceCardiaque) { this.frequenceCardiaque = frequenceCardiaque; }&#10;    public Double getTemperature() { return temperature; }&#10;    public void setTemperature(Double temperature) { this.temperature = temperature; }&#10;    public Integer getFrequenceRespiratoire() { return frequenceRespiratoire; }&#10;    public void setFrequenceRespiratoire(Integer frequenceRespiratoire) { this.frequenceRespiratoire = frequenceRespiratoire; }&#10;    public Double getPoids() { return poids; }&#10;    public void setPoids(Double poids) { this.poids = poids; }&#10;    public Double getTaille() { return taille; }&#10;    public void setTaille(Double taille) { this.taille = taille; }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.brif04_appteleexpertise_medicale.entity;&#10;&#10;import jakarta.persistence.*;&#10;import java.time.LocalDateTime;&#10;&#10;@Entity&#10;public class SignesVitaux {&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    @OneToOne(mappedBy = &quot;signesVitaux&quot;)&#10;    private Patient patient;&#10;&#10;    private LocalDateTime dateSaisie;&#10;    private String tension;&#10;    private Integer frequenceCardiaque;&#10;    private Double temperature;&#10;    private Integer frequenceRespiratoire;&#10;    private Double poids;&#10;    private Double taille;&#10;&#10;    protected SignesVitaux(){}&#10;    &#10;    public SignesVitaux(Patient patient, String tension, Integer frequenceCardiaque, Double temperature, Integer frequenceRespiratoire, Double poids, Double taille){&#10;        this.patient = patient;&#10;        this.dateSaisie = LocalDateTime.now();&#10;        this.tension = tension;&#10;        this.frequenceCardiaque = frequenceCardiaque;&#10;        this.temperature = temperature;&#10;        this.frequenceRespiratoire = frequenceRespiratoire;&#10;        this.poids = poids;&#10;        this.taille = taille;&#10;    }&#10;    &#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;    public Patient getPatient() { return patient; }&#10;    public void setPatient(Patient patient) { this.patient = patient; }&#10;    public LocalDateTime getDateSaisie() { return dateSaisie; }&#10;    public void setDateSaisie(LocalDateTime dateSaisie) { this.dateSaisie = dateSaisie; }&#10;    public String getTension() { return tension; }&#10;    public void setTension(String tension) { this.tension = tension; }&#10;    public Integer getFrequenceCardiaque() { return frequenceCardiaque; }&#10;    public void setFrequenceCardiaque(Integer frequenceCardiaque) { this.frequenceCardiaque = frequenceCardiaque; }&#10;    public Double getTemperature() { return temperature; }&#10;    public void setTemperature(Double temperature) { this.temperature = temperature; }&#10;    public Integer getFrequenceRespiratoire() { return frequenceRespiratoire; }&#10;    public void setFrequenceRespiratoire(Integer frequenceRespiratoire) { this.frequenceRespiratoire = frequenceRespiratoire; }&#10;    public Double getPoids() { return poids; }&#10;    public void setPoids(Double poids) { this.poids = poids; }&#10;    public Double getTaille() { return taille; }&#10;    public void setTaille(Double taille) { this.taille = taille; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/webapp/WEB-INF/views/login.jsp">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/webapp/WEB-INF/views/login.jsp" />
              <option name="originalContent" value="&lt;%--&#10;  Created by IntelliJ IDEA.&#10;  User: LENOVO&#10;  Date: 14/10/2025&#10;  Time: 11:12&#10;  To change this template use File | Settings | File Templates.&#10;--%&gt;&#10;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Connexion - Télé-Expertise Médicale&lt;/title&gt;&#10;    &lt;style&gt;&#10;        * {&#10;            margin: 0;&#10;            padding: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        body {&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            min-height: 100vh;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            padding: 15px;&#10;        }&#10;&#10;        .container {&#10;            background: rgba(255, 255, 255, 0.95);&#10;            backdrop-filter: blur(10px);&#10;            border-radius: 20px;&#10;            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);&#10;            padding: 35px 40px;&#10;            width: 100%;&#10;            max-width: 420px;&#10;            animation: slideIn 0.5s ease-out;&#10;        }&#10;&#10;        @keyframes slideIn {&#10;            from {&#10;                opacity: 0;&#10;                transform: translateY(-20px);&#10;            }&#10;            to {&#10;                opacity: 1;&#10;                transform: translateY(0);&#10;            }&#10;        }&#10;&#10;        .header {&#10;            text-align: center;&#10;            margin-bottom: 30px;&#10;        }&#10;&#10;        .header h2 {&#10;            color: #667eea;&#10;            font-size: 1.8rem;&#10;            margin-bottom: 8px;&#10;            font-weight: 700;&#10;        }&#10;&#10;        .header p {&#10;            color: #666;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 18px;&#10;        }&#10;&#10;        .form-group label {&#10;            display: block;&#10;            color: #333;&#10;            font-weight: 600;&#10;            margin-bottom: 8px;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group input {&#10;            width: 100%;&#10;            padding: 14px 16px;&#10;            border: 2px solid #e0e0e0;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            transition: all 0.3s ease;&#10;            background: #f8f9fa;&#10;        }&#10;&#10;        .form-group input:focus {&#10;            outline: none;&#10;            border-color: #667eea;&#10;            background: white;&#10;            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);&#10;        }&#10;&#10;        .form-group input::placeholder {&#10;            color: #999;&#10;        }&#10;&#10;        .forgot-password {&#10;            text-align: right;&#10;            margin-top: -10px;&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .forgot-password a {&#10;            color: #667eea;&#10;            text-decoration: none;&#10;            font-size: 0.85rem;&#10;            font-weight: 500;&#10;            transition: color 0.3s ease;&#10;        }&#10;&#10;        .forgot-password a:hover {&#10;            color: #764ba2;&#10;            text-decoration: underline;&#10;        }&#10;&#10;        .btn-submit {&#10;            width: 100%;&#10;            padding: 15px;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            color: white;&#10;            border: none;&#10;            border-radius: 10px;&#10;            font-size: 1.1rem;&#10;            font-weight: 700;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;            margin-top: 10px;&#10;            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;&#10;        .btn-submit:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);&#10;        }&#10;&#10;        .btn-submit:active {&#10;            transform: translateY(0);&#10;        }&#10;&#10;        .footer-link {&#10;            text-align: center;&#10;            margin-top: 25px;&#10;            font-size: 0.9rem;&#10;            color: #666;&#10;        }&#10;&#10;        .footer-link a {&#10;            color: #667eea;&#10;            text-decoration: none;&#10;            font-weight: 600;&#10;            transition: color 0.3s ease;&#10;        }&#10;&#10;        .footer-link a:hover {&#10;            color: #764ba2;&#10;            text-decoration: underline;&#10;        }&#10;&#10;        .error-message {&#10;            background: #fee;&#10;            color: #c33;&#10;            padding: 12px;&#10;            border-radius: 8px;&#10;            margin-bottom: 20px;&#10;            font-size: 0.9rem;&#10;            border-left: 4px solid #c33;&#10;            animation: shake 0.3s ease;&#10;        }&#10;&#10;        @keyframes shake {&#10;            0%, 100% { transform: translateX(0); }&#10;            25% { transform: translateX(-5px); }&#10;            75% { transform: translateX(5px); }&#10;        }&#10;&#10;        .success-message {&#10;            background: #efe;&#10;            color: #3c3;&#10;            padding: 12px;&#10;            border-radius: 8px;&#10;            margin-bottom: 20px;&#10;            font-size: 0.9rem;&#10;            border-left: 4px solid #3c3;&#10;        }&#10;&#10;        .divider {&#10;            display: flex;&#10;            align-items: center;&#10;            text-align: center;&#10;            margin: 25px 0;&#10;            color: #999;&#10;            font-size: 0.85rem;&#10;        }&#10;&#10;        .divider::before,&#10;        .divider::after {&#10;            content: '';&#10;            flex: 1;&#10;            border-bottom: 1px solid #ddd;&#10;        }&#10;&#10;        .divider span {&#10;            padding: 0 10px;&#10;        }&#10;&#10;        /* Responsive */&#10;        @media (max-height: 650px) {&#10;            .container {&#10;                padding: 25px 35px;&#10;            }&#10;&#10;            .header h2 {&#10;                font-size: 1.5rem;&#10;            }&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;header&quot;&gt;&#10;            &lt;h2&gt; Connexion&lt;/h2&gt;&#10;            &lt;p&gt;Accédez à votre espace professionnel&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Messages d'erreur ou de succès --&gt;&#10;        &lt;% if (request.getAttribute(&quot;error&quot;) != null) { %&gt;&#10;            &lt;div class=&quot;error-message&quot;&gt;&#10;                ❌ &lt;%= request.getAttribute(&quot;error&quot;) %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;&#10;        &lt;% if (request.getAttribute(&quot;success&quot;) != null) { %&gt;&#10;            &lt;div class=&quot;success-message&quot;&gt;&#10;                ✅ &lt;%= request.getAttribute(&quot;success&quot;) %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;&#10;        &lt;form action=&quot;${pageContext.request.contextPath}/login&quot; method=&quot;post&quot;&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;email&quot;&gt; Email&lt;/label&gt;&#10;                &lt;input type=&quot;email&quot;&#10;                       id=&quot;email&quot;&#10;                       name=&quot;email&quot;&#10;                       placeholder=&quot;Entrez votre email&quot;&#10;                       required&#10;                       value=&quot;&lt;%= request.getParameter(&quot;email&quot;) != null ? request.getParameter(&quot;email&quot;) : &quot;&quot; %&gt;&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt; Mot de passe&lt;/label&gt;&#10;                &lt;input type=&quot;password&quot;&#10;                       id=&quot;password&quot;&#10;                       name=&quot;password&quot;&#10;                       placeholder=&quot;Entrez votre mot de passe&quot;&#10;                       required&#10;                       minlength=&quot;8&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;&#10;&#10;            &lt;button type=&quot;submit&quot; class=&quot;btn-submit&quot;&gt;&#10;                 Se connecter&#10;            &lt;/button&gt;&#10;        &lt;/form&gt;&#10;&#10;        &lt;div class=&quot;divider&quot;&gt;&#10;            &lt;span&gt;OU&lt;/span&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;footer-link&quot;&gt;&#10;            Pas encore de compte ? &lt;a href=&quot;/register&quot;&gt;S'inscrire&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;%--&#10;  Created by IntelliJ IDEA.&#10;  User: LENOVO&#10;  Date: 14/10/2025&#10;  Time: 11:12&#10;  To change this template use File | Settings | File Templates.&#10;--%&gt;&#10;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Connexion - Télé-Expertise Médicale&lt;/title&gt;&#10;    &lt;style&gt;&#10;        * {&#10;            margin: 0;&#10;            padding: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        body {&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            min-height: 100vh;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            padding: 15px;&#10;        }&#10;&#10;        .container {&#10;            background: rgba(255, 255, 255, 0.95);&#10;            backdrop-filter: blur(10px);&#10;            border-radius: 20px;&#10;            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);&#10;            padding: 35px 40px;&#10;            width: 100%;&#10;            max-width: 420px;&#10;            animation: slideIn 0.5s ease-out;&#10;        }&#10;&#10;        @keyframes slideIn {&#10;            from {&#10;                opacity: 0;&#10;                transform: translateY(-20px);&#10;            }&#10;            to {&#10;                opacity: 1;&#10;                transform: translateY(0);&#10;            }&#10;        }&#10;&#10;        .header {&#10;            text-align: center;&#10;            margin-bottom: 30px;&#10;        }&#10;&#10;        .header h2 {&#10;            color: #667eea;&#10;            font-size: 1.8rem;&#10;            margin-bottom: 8px;&#10;            font-weight: 700;&#10;        }&#10;&#10;        .header p {&#10;            color: #666;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 18px;&#10;        }&#10;&#10;        .form-group label {&#10;            display: block;&#10;            color: #333;&#10;            font-weight: 600;&#10;            margin-bottom: 8px;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group input {&#10;            width: 100%;&#10;            padding: 14px 16px;&#10;            border: 2px solid #e0e0e0;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            transition: all 0.3s ease;&#10;            background: #f8f9fa;&#10;        }&#10;&#10;        .form-group input:focus {&#10;            outline: none;&#10;            border-color: #667eea;&#10;            background: white;&#10;            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);&#10;        }&#10;&#10;        .form-group input::placeholder {&#10;            color: #999;&#10;        }&#10;&#10;        .forgot-password {&#10;            text-align: right;&#10;            margin-top: -10px;&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .forgot-password a {&#10;            color: #667eea;&#10;            text-decoration: none;&#10;            font-size: 0.85rem;&#10;            font-weight: 500;&#10;            transition: color 0.3s ease;&#10;        }&#10;&#10;        .forgot-password a:hover {&#10;            color: #764ba2;&#10;            text-decoration: underline;&#10;        }&#10;&#10;        .btn-submit {&#10;            width: 100%;&#10;            padding: 15px;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            color: white;&#10;            border: none;&#10;            border-radius: 10px;&#10;            font-size: 1.1rem;&#10;            font-weight: 700;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;            margin-top: 10px;&#10;            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;&#10;        .btn-submit:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);&#10;        }&#10;&#10;        .btn-submit:active {&#10;            transform: translateY(0);&#10;        }&#10;&#10;        .footer-link {&#10;            text-align: center;&#10;            margin-top: 25px;&#10;            font-size: 0.9rem;&#10;            color: #666;&#10;        }&#10;&#10;        .footer-link a {&#10;            color: #667eea;&#10;            text-decoration: none;&#10;            font-weight: 600;&#10;            transition: color 0.3s ease;&#10;        }&#10;&#10;        .footer-link a:hover {&#10;            color: #764ba2;&#10;            text-decoration: underline;&#10;        }&#10;&#10;        .error-message {&#10;            background: #fee;&#10;            color: #c33;&#10;            padding: 12px;&#10;            border-radius: 8px;&#10;            margin-bottom: 20px;&#10;            font-size: 0.9rem;&#10;            border-left: 4px solid #c33;&#10;            animation: shake 0.3s ease;&#10;        }&#10;&#10;        @keyframes shake {&#10;            0%, 100% { transform: translateX(0); }&#10;            25% { transform: translateX(-5px); }&#10;            75% { transform: translateX(5px); }&#10;        }&#10;&#10;        .success-message {&#10;            background: #efe;&#10;            color: #3c3;&#10;            padding: 12px;&#10;            border-radius: 8px;&#10;            margin-bottom: 20px;&#10;            font-size: 0.9rem;&#10;            border-left: 4px solid #3c3;&#10;        }&#10;&#10;        .divider {&#10;            display: flex;&#10;            align-items: center;&#10;            text-align: center;&#10;            margin: 25px 0;&#10;            color: #999;&#10;            font-size: 0.85rem;&#10;        }&#10;&#10;        .divider::before,&#10;        .divider::after {&#10;            content: '';&#10;            flex: 1;&#10;            border-bottom: 1px solid #ddd;&#10;        }&#10;&#10;        .divider span {&#10;            padding: 0 10px;&#10;        }&#10;&#10;        /* Responsive */&#10;        @media (max-height: 650px) {&#10;            .container {&#10;                padding: 25px 35px;&#10;            }&#10;&#10;            .header h2 {&#10;                font-size: 1.5rem;&#10;            }&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;header&quot;&gt;&#10;            &lt;h2&gt; Connexion&lt;/h2&gt;&#10;            &lt;p&gt;Accédez à votre espace professionnel&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Messages d'erreur ou de succès --&gt;&#10;        &lt;% if (request.getAttribute(&quot;error&quot;) != null) { %&gt;&#10;            &lt;div class=&quot;error-message&quot;&gt;&#10;                ❌ &lt;%= request.getAttribute(&quot;error&quot;) %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;&#10;        &lt;% if (request.getAttribute(&quot;success&quot;) != null) { %&gt;&#10;            &lt;div class=&quot;success-message&quot;&gt;&#10;                ✅ &lt;%= request.getAttribute(&quot;success&quot;) %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;&#10;        &lt;form action=&quot;${pageContext.request.contextPath}/login&quot; method=&quot;post&quot;&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;email&quot;&gt; Email&lt;/label&gt;&#10;                &lt;input type=&quot;email&quot;&#10;                       id=&quot;email&quot;&#10;                       name=&quot;email&quot;&#10;                       placeholder=&quot;Entrez votre email&quot;&#10;                       required&#10;                       value=&quot;&lt;%= request.getParameter(&quot;email&quot;) != null ? request.getParameter(&quot;email&quot;) : &quot;&quot; %&gt;&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt; Mot de passe&lt;/label&gt;&#10;                &lt;input type=&quot;password&quot;&#10;                       id=&quot;password&quot;&#10;                       name=&quot;password&quot;&#10;                       placeholder=&quot;Entrez votre mot de passe&quot;&#10;                       required&#10;                       minlength=&quot;8&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;&#10;&#10;            &lt;button type=&quot;submit&quot; class=&quot;btn-submit&quot;&gt;&#10;                 Se connecter&#10;            &lt;/button&gt;&#10;        &lt;/form&gt;&#10;&#10;        &lt;div class=&quot;divider&quot;&gt;&#10;            &lt;span&gt;OU&lt;/span&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;footer-link&quot;&gt;&#10;            Pas encore de compte ? &lt;a href=&quot;${pageContext.request.contextPath}/register&quot;&gt;S'inscrire&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/webapp/WEB-INF/web.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/webapp/WEB-INF/web.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;web-app xmlns=&quot;https://jakarta.ee/xml/ns/jakartaee&quot;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;         xsi:schemaLocation=&quot;https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd&quot;&#10;         version=&quot;6.0&quot;&gt;&#10;    &#10;    &lt;!-- Page d'accueil par défaut --&gt;&#10;    &lt;welcome-file-list&gt;&#10;        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;&#10;        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;&#10;    &lt;/welcome-file-list&gt;&#10;    &#10;&lt;/web-app&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;web-app xmlns=&quot;https://jakarta.ee/xml/ns/jakartaee&quot;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;         xsi:schemaLocation=&quot;https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd&quot;&#10;         version=&quot;6.0&quot;&gt;&#10;    &#10;    &lt;!-- Page d'accueil par défaut --&gt;&#10;    &lt;welcome-file-list&gt;&#10;        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;&#10;        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;&#10;    &lt;/welcome-file-list&gt;&#10;    &#10;&lt;/web-app&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>