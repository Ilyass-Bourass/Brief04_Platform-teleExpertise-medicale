<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/dao/DossierMedicalDao.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/dao/DossierMedicalDao.java" />
              <option name="updatedContent" value="package com.example.brif04_appteleexpertise_medicale.dao;&#10;&#10;import com.example.brif04_appteleexpertise_medicale.entity.DossierMedical;&#10;import com.example.brif04_appteleexpertise_medicale.util.JpaUtil;&#10;import jakarta.persistence.EntityManager;&#10;&#10;public class DossierMedicalDao {&#10;&#10;    // Méthode pour sauvegarder le dossier médical dans la base de données&#10;    public DossierMedical save(DossierMedical dossierMedical) {&#10;        EntityManager em = JpaUtil.getEntityManager();&#10;        &#10;        try {&#10;            em.getTransaction().begin();&#10;            &#10;            // Si l'ID est null, c'est une création (persist)&#10;            // Sinon c'est une modification (merge)&#10;            if (dossierMedical.getId() == null) {&#10;                em.persist(dossierMedical);&#10;            } else {&#10;                dossierMedical = em.merge(dossierMedical);&#10;            }&#10;            &#10;            em.getTransaction().commit();&#10;            return dossierMedical;&#10;            &#10;        } catch (Exception e) {&#10;            if (em.getTransaction().isActive()) {&#10;                em.getTransaction().rollback();&#10;            }&#10;            throw new RuntimeException(&quot;Erreur lors de la sauvegarde du dossier médical&quot;, e);&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    // Méthode pour récupérer le dossier médical par ID&#10;    public DossierMedical findById(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManager();&#10;        &#10;        try {&#10;            return em.find(DossierMedical.class, id);&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    // Méthode pour mettre à jour le dossier médical&#10;    public DossierMedical update(DossierMedical dossierMedical) {&#10;        return save(dossierMedical);&#10;    }&#10;&#10;    // Méthode pour supprimer le dossier médical&#10;    public void delete(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManager();&#10;        &#10;        try {&#10;            em.getTransaction().begin();&#10;            &#10;            DossierMedical dossierMedical = em.find(DossierMedical.class, id);&#10;            if (dossierMedical != null) {&#10;                em.remove(dossierMedical);&#10;            }&#10;            &#10;            em.getTransaction().commit();&#10;            &#10;        } catch (Exception e) {&#10;            if (em.getTransaction().isActive()) {&#10;                em.getTransaction().rollback();&#10;            }&#10;            throw new RuntimeException(&quot;Erreur lors de la suppression du dossier médical&quot;, e);&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/dao/SignesVitauxDao.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/dao/SignesVitauxDao.java" />
              <option name="updatedContent" value="package com.example.brif04_appteleexpertise_medicale.dao;&#10;&#10;import com.example.brif04_appteleexpertise_medicale.entity.SignesVitaux;&#10;import com.example.brif04_appteleexpertise_medicale.util.JpaUtil;&#10;import jakarta.persistence.EntityManager;&#10;&#10;public class SignesVitauxDao {&#10;&#10;    // Méthode pour sauvegarder les signes vitaux dans la base de données&#10;    public SignesVitaux save(SignesVitaux signesVitaux) {&#10;        EntityManager em = JpaUtil.getEntityManager();&#10;        &#10;        try {&#10;            em.getTransaction().begin();&#10;            &#10;            // Si l'ID est null, c'est une création (persist)&#10;            // Sinon c'est une modification (merge)&#10;            if (signesVitaux.getId() == null) {&#10;                em.persist(signesVitaux);&#10;            } else {&#10;                signesVitaux = em.merge(signesVitaux);&#10;            }&#10;            &#10;            em.getTransaction().commit();&#10;            return signesVitaux;&#10;            &#10;        } catch (Exception e) {&#10;            if (em.getTransaction().isActive()) {&#10;                em.getTransaction().rollback();&#10;            }&#10;            throw new RuntimeException(&quot;Erreur lors de la sauvegarde des signes vitaux&quot;, e);&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    // Méthode pour récupérer les signes vitaux par ID&#10;    public SignesVitaux findById(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManager();&#10;        &#10;        try {&#10;            return em.find(SignesVitaux.class, id);&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;&#10;    // Méthode pour supprimer les signes vitaux&#10;    public void delete(Long id) {&#10;        EntityManager em = JpaUtil.getEntityManager();&#10;        &#10;        try {&#10;            em.getTransaction().begin();&#10;            &#10;            SignesVitaux signesVitaux = em.find(SignesVitaux.class, id);&#10;            if (signesVitaux != null) {&#10;                em.remove(signesVitaux);&#10;            }&#10;            &#10;            em.getTransaction().commit();&#10;            &#10;        } catch (Exception e) {&#10;            if (em.getTransaction().isActive()) {&#10;                em.getTransaction().rollback();&#10;            }&#10;            throw new RuntimeException(&quot;Erreur lors de la suppression des signes vitaux&quot;, e);&#10;        } finally {&#10;            em.close();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/entity/DossierMedical.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/entity/DossierMedical.java" />
              <option name="originalContent" value="package com.example.brif04_appteleexpertise_medicale.entity;&#10;&#10;&#10;import jakarta.persistence.*;&#10;&#10;@Entity&#10;public class DossierMedical {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    private String antecedents;&#10;    private String allergies;&#10;    private String traitementEnCours;&#10;&#10;    @OneToOne(mappedBy = &quot;dossierMedical&quot;)&#10;    private Patient patient;&#10;&#10;    // Constructors&#10;    public DossierMedical() {}&#10;&#10;    public DossierMedical(Patient patient, String antecedents, String allergies, String traitementEnCours) {&#10;        this.patient = patient;&#10;        this.antecedents = antecedents;&#10;        this.allergies = allergies;&#10;        this.traitementEnCours = traitementEnCours;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;&#10;    public String getAntecedents() { return antecedents; }&#10;    public void setAntecedents(String antecedents) { this.antecedents = antecedents; }&#10;&#10;    public String getAllergies() { return allergies; }&#10;    public void setAllergies(String allergies) { this.allergies = allergies; }&#10;&#10;    public String getTraitementEnCours() { return traitementEnCours; }&#10;    public void setTraitementEnCours(String traitementEnCours) { this.traitementEnCours = traitementEnCours; }&#10;&#10;    public Patient getPatient() { return patient; }&#10;    public void setPatient(Patient patient) { this.patient = patient; }&#10;}" />
              <option name="updatedContent" value="package com.example.brif04_appteleexpertise_medicale.entity;&#10;&#10;&#10;import jakarta.persistence.*;&#10;&#10;@Entity&#10;public class DossierMedical {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    private String antecedents;&#10;    private String allergies;&#10;    private String traitementEnCours;&#10;&#10;    @OneToOne(mappedBy = &quot;dossierMedical&quot;)&#10;    private Patient patient;&#10;&#10;    // Constructors&#10;    public DossierMedical() {}&#10;&#10;    public DossierMedical(Patient patient, String antecedents, String allergies, String traitementEnCours) {&#10;        this.patient = patient;&#10;        this.antecedents = antecedents;&#10;        this.allergies = allergies;&#10;        this.traitementEnCours = traitementEnCours;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;&#10;    public String getAntecedents() { return antecedents; }&#10;    public void setAntecedents(String antecedents) { this.antecedents = antecedents; }&#10;&#10;    public String getAllergies() { return allergies; }&#10;    public void setAllergies(String allergies) { this.allergies = allergies; }&#10;&#10;    public String getTraitementEnCours() { return traitementEnCours; }&#10;    public void setTraitementEnCours(String traitementEnCours) { this.traitementEnCours = traitementEnCours; }&#10;&#10;    public Patient getPatient() { return patient; }&#10;    public void setPatient(Patient patient) { this.patient = patient; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/entity/SignesVitaux.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/entity/SignesVitaux.java" />
              <option name="originalContent" value="package com.example.brif04_appteleexpertise_medicale.entity;&#10;&#10;import jakarta.persistence.*;&#10;import java.time.LocalDateTime;&#10;&#10;@Entity&#10;public class SignesVitaux {&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    @OneToOne(mappedBy = &quot;signesVitaux&quot;)&#10;    private Patient patient;&#10;&#10;    private LocalDateTime dateSaisie;&#10;    private String tension;&#10;    private Integer frequenceCardiaque;&#10;    private Double temperature;&#10;    private Integer frequenceRespiratoire;&#10;    private Double poids;&#10;    private Double taille;&#10;&#10;    protected SignesVitaux(){}&#10;    &#10;    public SignesVitaux(Patient patient, String tension, Integer frequenceCardiaque, Double temperature, Integer frequenceRespiratoire, Double poids, Double taille){&#10;        this.patient = patient;&#10;        this.dateSaisie = LocalDateTime.now();&#10;        this.tension = tension;&#10;        this.frequenceCardiaque = frequenceCardiaque;&#10;        this.temperature = temperature;&#10;        this.frequenceRespiratoire = frequenceRespiratoire;&#10;        this.poids = poids;&#10;        this.taille = taille;&#10;    }&#10;    &#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;    public Patient getPatient() { return patient; }&#10;    public void setPatient(Patient patient) { this.patient = patient; }&#10;    public LocalDateTime getDateSaisie() { return dateSaisie; }&#10;    public void setDateSaisie(LocalDateTime dateSaisie) { this.dateSaisie = dateSaisie; }&#10;    public String getTension() { return tension; }&#10;    public void setTension(String tension) { this.tension = tension; }&#10;    public Integer getFrequenceCardiaque() { return frequenceCardiaque; }&#10;    public void setFrequenceCardiaque(Integer frequenceCardiaque) { this.frequenceCardiaque = frequenceCardiaque; }&#10;    public Double getTemperature() { return temperature; }&#10;    public void setTemperature(Double temperature) { this.temperature = temperature; }&#10;    public Integer getFrequenceRespiratoire() { return frequenceRespiratoire; }&#10;    public void setFrequenceRespiratoire(Integer frequenceRespiratoire) { this.frequenceRespiratoire = frequenceRespiratoire; }&#10;    public Double getPoids() { return poids; }&#10;    public void setPoids(Double poids) { this.poids = poids; }&#10;    public Double getTaille() { return taille; }&#10;    public void setTaille(Double taille) { this.taille = taille; }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.brif04_appteleexpertise_medicale.entity;&#10;&#10;import jakarta.persistence.*;&#10;import java.time.LocalDateTime;&#10;&#10;@Entity&#10;public class SignesVitaux {&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    @OneToOne(mappedBy = &quot;signesVitaux&quot;)&#10;    private Patient patient;&#10;&#10;    private LocalDateTime dateSaisie;&#10;    private String tension;&#10;    private Integer frequenceCardiaque;&#10;    private Double temperature;&#10;    private Integer frequenceRespiratoire;&#10;    private Double poids;&#10;    private Double taille;&#10;&#10;    protected SignesVitaux(){}&#10;    &#10;    public SignesVitaux(Patient patient, String tension, Integer frequenceCardiaque, Double temperature, Integer frequenceRespiratoire, Double poids, Double taille){&#10;        this.patient = patient;&#10;        this.dateSaisie = LocalDateTime.now();&#10;        this.tension = tension;&#10;        this.frequenceCardiaque = frequenceCardiaque;&#10;        this.temperature = temperature;&#10;        this.frequenceRespiratoire = frequenceRespiratoire;&#10;        this.poids = poids;&#10;        this.taille = taille;&#10;    }&#10;    &#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;    public Patient getPatient() { return patient; }&#10;    public void setPatient(Patient patient) { this.patient = patient; }&#10;    public LocalDateTime getDateSaisie() { return dateSaisie; }&#10;    public void setDateSaisie(LocalDateTime dateSaisie) { this.dateSaisie = dateSaisie; }&#10;    public String getTension() { return tension; }&#10;    public void setTension(String tension) { this.tension = tension; }&#10;    public Integer getFrequenceCardiaque() { return frequenceCardiaque; }&#10;    public void setFrequenceCardiaque(Integer frequenceCardiaque) { this.frequenceCardiaque = frequenceCardiaque; }&#10;    public Double getTemperature() { return temperature; }&#10;    public void setTemperature(Double temperature) { this.temperature = temperature; }&#10;    public Integer getFrequenceRespiratoire() { return frequenceRespiratoire; }&#10;    public void setFrequenceRespiratoire(Integer frequenceRespiratoire) { this.frequenceRespiratoire = frequenceRespiratoire; }&#10;    public Double getPoids() { return poids; }&#10;    public void setPoids(Double poids) { this.poids = poids; }&#10;    public Double getTaille() { return taille; }&#10;    public void setTaille(Double taille) { this.taille = taille; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/service/PatientService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/service/PatientService.java" />
              <option name="originalContent" value="package com.example.brif04_appteleexpertise_medicale.service;&#10;&#10;import com.example.brif04_appteleexpertise_medicale.dao.PatientDao;&#10;import com.example.brif04_appteleexpertise_medicale.entity.DossierMedical;&#10;import com.example.brif04_appteleexpertise_medicale.entity.Infirmier;&#10;import com.example.brif04_appteleexpertise_medicale.entity.Patient;&#10;import com.example.brif04_appteleexpertise_medicale.entity.SignesVitaux;&#10;&#10;import java.time.LocalDate;&#10;import java.util.List;&#10;&#10;public class PatientService {&#10;&#10;    private final PatientDao patientDao = new PatientDao();&#10;    private final SignesVitauxService signesVitauxService = new SignesVitauxService();&#10;    private final DossierMedicalService dossierMedicalService = new DossierMedicalService();&#10;&#10;&#10;    public Patient creerPatient(String nom, String prenom, LocalDate dateNaissance,&#10;                               String numSecu, String adresse, String telephone,&#10;                               String mutuelle, Infirmier infirmier,&#10;                               String tensionArterielle, Integer frequenceCardiaque,&#10;                               Double temperature, Integer frequenceRespiratoire,&#10;                               Double poids, Double taille,&#10;                               String antecedents, String allergies, String traitements) {&#10;&#10;        Patient existant = patientDao.findByNumSecu(numSecu);&#10;        if (existant != null) {&#10;            throw new RuntimeException(&quot;Un patient avec ce numéro de sécurité sociale existe déjà&quot;);&#10;        }&#10;&#10;        Patient patient = new Patient();&#10;        patient.setNom(nom);&#10;        patient.setPrenom(prenom);&#10;        patient.setDateNaissance(dateNaissance);&#10;        patient.setNumSecu(numSecu);&#10;        patient.setAdresse(adresse);&#10;        patient.setTelephone(telephone);&#10;        patient.setMutuelle(mutuelle);&#10;        patient.setFileAttente(true);&#10;        patient.setInfirmier(infirmier);&#10;&#10;        if (tensionArterielle != null || frequenceCardiaque != null ||&#10;            temperature != null || frequenceRespiratoire != null ||&#10;            poids != null || taille != null) {&#10;&#10;            SignesVitaux signesVitaux = new SignesVitaux(patient, tensionArterielle,&#10;                frequenceCardiaque, temperature, frequenceRespiratoire, poids, taille);&#10;            patient.setSignesVitaux(signesVitaux);&#10;        }&#10;&#10;        if (antecedents != null || allergies != null || traitements != null) {&#10;            DossierMedical dossierMedical = new DossierMedical(patient, antecedents,&#10;                allergies, traitements);&#10;            patient.setDossierMedical(dossierMedical);&#10;        }&#10;&#10;        return patientDao.save(patient);&#10;    }&#10;&#10;&#10;    public List&lt;Patient&gt; getAllPatients() {&#10;        return patientDao.findAll();&#10;    }&#10;&#10;&#10;    public List&lt;Patient&gt; getPatientsEnAttente() {&#10;        return patientDao.findPatientsEnAttente();&#10;    }&#10;&#10;&#10;    public Patient getPatientById(Long id) {&#10;        return patientDao.findById(id);&#10;    }&#10;&#10;&#10;    public Patient getPatientByNumSecu(String numSecu) {&#10;        return patientDao.findByNumSecu(numSecu);&#10;    }&#10;&#10;&#10;    public Long countTotalPatients() {&#10;        return patientDao.countAll();&#10;    }&#10;&#10;&#10;    public Long countPatientsEnAttente() {&#10;        return patientDao.countPatientsEnAttente();&#10;    }&#10;&#10;    public Long countPatientsTraites() {&#10;        return patientDao.countPatientsTraites();&#10;    }&#10;&#10;    public Patient mettreEnFileAttente(Long patientId) {&#10;        Patient patient = patientDao.findById(patientId);&#10;        if (patient != null) {&#10;            patient.setFileAttente(true);&#10;            return patientDao.save(patient);&#10;        }&#10;        throw new RuntimeException(&quot;Patient introuvable&quot;);&#10;    }&#10;&#10;&#10;    public Patient retirerDeFileAttente(Long patientId) {&#10;        Patient patient = patientDao.findById(patientId);&#10;        if (patient != null) {&#10;            patient.setFileAttente(false);&#10;            return patientDao.save(patient);&#10;        }&#10;        throw new RuntimeException(&quot;Patient introuvable&quot;);&#10;    }&#10;&#10;    // Ajout: suppression d'un patient via le service&#10;    public void deletePatient(Long patientId) {&#10;        patientDao.delete(patientId);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.brif04_appteleexpertise_medicale.service;&#13;&#10;&#13;&#10;import com.example.brif04_appteleexpertise_medicale.dao.PatientDao;&#13;&#10;import com.example.brif04_appteleexpertise_medicale.entity.DossierMedical;&#13;&#10;import com.example.brif04_appteleexpertise_medicale.entity.Infirmier;&#13;&#10;import com.example.brif04_appteleexpertise_medicale.entity.Patient;&#13;&#10;import com.example.brif04_appteleexpertise_medicale.entity.SignesVitaux;&#13;&#10;&#13;&#10;import java.time.LocalDate;&#13;&#10;import java.util.List;&#13;&#10;&#13;&#10;public class PatientService {&#13;&#10;&#13;&#10;    private final PatientDao patientDao = new PatientDao();&#13;&#10;    private final SignesVitauxService signesVitauxService = new SignesVitauxService();&#13;&#10;    private final DossierMedicalService dossierMedicalService = new DossierMedicalService();&#13;&#10;&#13;&#10;&#13;&#10;    public Patient creerPatient(String nom, String prenom, LocalDate dateNaissance,&#13;&#10;                               String numSecu, String adresse, String telephone,&#13;&#10;                               String mutuelle, Infirmier infirmier,&#13;&#10;                               String tensionArterielle, Integer frequenceCardiaque,&#13;&#10;                               Double temperature, Integer frequenceRespiratoire,&#13;&#10;                               Double poids, Double taille,&#13;&#10;                               String antecedents, String allergies, String traitements) {&#13;&#10;&#13;&#10;        Patient existant = patientDao.findByNumSecu(numSecu);&#13;&#10;        if (existant != null) {&#13;&#10;            throw new RuntimeException(&quot;Un patient avec ce numéro de sécurité sociale existe déjà&quot;);&#13;&#10;        }&#13;&#10;&#13;&#10;        Patient patient = new Patient();&#13;&#10;        patient.setNom(nom);&#13;&#10;        patient.setPrenom(prenom);&#13;&#10;        patient.setDateNaissance(dateNaissance);&#13;&#10;        patient.setNumSecu(numSecu);&#13;&#10;        patient.setAdresse(adresse);&#13;&#10;        patient.setTelephone(telephone);&#13;&#10;        patient.setMutuelle(mutuelle);&#13;&#10;        patient.setFileAttente(true);&#13;&#10;        patient.setInfirmier(infirmier);&#13;&#10;&#13;&#10;        if (tensionArterielle != null || frequenceCardiaque != null ||&#13;&#10;            temperature != null || frequenceRespiratoire != null ||&#13;&#10;            poids != null || taille != null) {&#13;&#10;&#13;&#10;            SignesVitaux signesVitaux = new SignesVitaux(patient, tensionArterielle,&#13;&#10;                frequenceCardiaque, temperature, frequenceRespiratoire, poids, taille);&#13;&#10;            patient.setSignesVitaux(signesVitaux);&#13;&#10;        }&#13;&#10;&#13;&#10;        if (antecedents != null || allergies != null || traitements != null) {&#13;&#10;            DossierMedical dossierMedical = new DossierMedical(patient, antecedents,&#13;&#10;                allergies, traitements);&#13;&#10;            patient.setDossierMedical(dossierMedical);&#13;&#10;        }&#13;&#10;&#13;&#10;        return patientDao.save(patient);&#13;&#10;    }&#13;&#10;&#13;&#10;&#13;&#10;    public List&lt;Patient&gt; getAllPatients() {&#13;&#10;        return patientDao.findAll();&#13;&#10;    }&#13;&#10;&#13;&#10;&#13;&#10;    public List&lt;Patient&gt; getPatientsEnAttente() {&#13;&#10;        return patientDao.findPatientsEnAttente();&#13;&#10;    }&#13;&#10;&#13;&#10;&#13;&#10;    public Patient getPatientById(Long id) {&#13;&#10;        return patientDao.findById(id);&#13;&#10;    }&#13;&#10;&#13;&#10;&#13;&#10;    public Patient getPatientByNumSecu(String numSecu) {&#13;&#10;        return patientDao.findByNumSecu(numSecu);&#13;&#10;    }&#13;&#10;&#13;&#10;&#13;&#10;    public Long countTotalPatients() {&#13;&#10;        return patientDao.countAll();&#13;&#10;    }&#13;&#10;&#13;&#10;&#13;&#10;    public Long countPatientsEnAttente() {&#13;&#10;        return patientDao.countPatientsEnAttente();&#13;&#10;    }&#13;&#10;&#13;&#10;    public Long countPatientsTraites() {&#13;&#10;        return patientDao.countPatientsTraites();&#13;&#10;    }&#13;&#10;&#13;&#10;    public Patient mettreEnFileAttente(Long patientId) {&#13;&#10;        Patient patient = patientDao.findById(patientId);&#13;&#10;        if (patient != null) {&#13;&#10;            patient.setFileAttente(true);&#13;&#10;            return patientDao.save(patient);&#13;&#10;        }&#13;&#10;        throw new RuntimeException(&quot;Patient introuvable&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;&#13;&#10;    public Patient retirerDeFileAttente(Long patientId) {&#13;&#10;        Patient patient = patientDao.findById(patientId);&#13;&#10;        if (patient != null) {&#13;&#10;            patient.setFileAttente(false);&#13;&#10;            return patientDao.save(patient);&#13;&#10;        }&#13;&#10;        throw new RuntimeException(&quot;Patient introuvable&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    // Ajout: suppression d'un patient via le service&#13;&#10;    public void deletePatient(Long patientId) {&#13;&#10;        patientDao.delete(patientId);&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/servlet/EXEMPLE_InfirmierServletToutEnUn.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/servlet/EXEMPLE_InfirmierServletToutEnUn.java" />
              <option name="updatedContent" value="package com.example.brif04_appteleexpertise_medicale.servlet;&#10;&#10;import com.example.brif04_appteleexpertise_medicale.entity.Infirmier;&#10;import com.example.brif04_appteleexpertise_medicale.entity.Patient;&#10;import com.example.brif04_appteleexpertise_medicale.entity.Utilisateur;&#10;import com.example.brif04_appteleexpertise_medicale.service.PatientService;&#10;import jakarta.servlet.ServletException;&#10;import jakarta.servlet.annotation.WebServlet;&#10;import jakarta.servlet.http.HttpServlet;&#10;import jakarta.servlet.http.HttpServletRequest;&#10;import jakarta.servlet.http.HttpServletResponse;&#10;import jakarta.servlet.http.HttpSession;&#10;&#10;import java.io.IOException;&#10;import java.time.LocalDate;&#10;import java.util.List;&#10;&#10;// ❌ MAUVAISE PRATIQUE - Tout dans une seule servlet&#10;@WebServlet(&quot;/infirmier/dashboard&quot;)&#10;public class InfirmierServletToutEnUn extends HttpServlet {&#10;    &#10;    private final PatientService patientService = new PatientService();&#10;    &#10;    // Afficher le dashboard&#10;    @Override&#10;    protected void doGet(HttpServletRequest request, HttpServletResponse response) &#10;            throws ServletException, IOException {&#10;        &#10;        HttpSession session = request.getSession(false);&#10;        if (session == null || session.getAttribute(&quot;utilisateur&quot;) == null) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/login&quot;);&#10;            return;&#10;        }&#10;        &#10;        Utilisateur utilisateur = (Utilisateur) session.getAttribute(&quot;utilisateur&quot;);&#10;        if (!(utilisateur instanceof Infirmier)) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/login&quot;);&#10;            return;&#10;        }&#10;        &#10;        try {&#10;            // Récupérer les statistiques&#10;            Long totalPatients = patientService.countTotalPatients();&#10;            Long patientsEnAttente = patientService.countPatientsEnAttente();&#10;            Long patientsTraites = patientService.countPatientsTraites();&#10;            List&lt;Patient&gt; patients = patientService.getAllPatients();&#10;            &#10;            request.setAttribute(&quot;totalPatients&quot;, totalPatients);&#10;            request.setAttribute(&quot;patientsEnAttente&quot;, patientsEnAttente);&#10;            request.setAttribute(&quot;patientsTraites&quot;, patientsTraites);&#10;            request.setAttribute(&quot;patients&quot;, patients);&#10;            &#10;            request.getRequestDispatcher(&quot;/WEB-INF/views/infirmier/infirmier.jsp&quot;).forward(request, response);&#10;            &#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            request.setAttribute(&quot;errorMessage&quot;, &quot;Erreur : &quot; + e.getMessage());&#10;            request.getRequestDispatcher(&quot;/WEB-INF/views/infirmier/infirmier.jsp&quot;).forward(request, response);&#10;        }&#10;    }&#10;    &#10;    // Créer un patient&#10;    @Override&#10;    protected void doPost(HttpServletRequest request, HttpServletResponse response) &#10;            throws ServletException, IOException {&#10;        &#10;        HttpSession session = request.getSession(false);&#10;        if (session == null || session.getAttribute(&quot;utilisateur&quot;) == null) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/login&quot;);&#10;            return;&#10;        }&#10;        &#10;        Utilisateur utilisateur = (Utilisateur) session.getAttribute(&quot;utilisateur&quot;);&#10;        if (!(utilisateur instanceof Infirmier)) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/login&quot;);&#10;            return;&#10;        }&#10;        &#10;        Infirmier infirmier = (Infirmier) utilisateur;&#10;        &#10;        try {&#10;            // Récupérer toutes les données du formulaire (60+ lignes)&#10;            String nom = request.getParameter(&quot;nom&quot;);&#10;            String prenom = request.getParameter(&quot;prenom&quot;);&#10;            String dateNaissanceStr = request.getParameter(&quot;dateNaissance&quot;);&#10;            String numSecu = request.getParameter(&quot;numSecu&quot;);&#10;            String telephone = request.getParameter(&quot;telephone&quot;);&#10;            String adresse = request.getParameter(&quot;adresse&quot;);&#10;            String mutuelle = request.getParameter(&quot;mutuelle&quot;);&#10;            LocalDate dateNaissance = LocalDate.parse(dateNaissanceStr);&#10;            &#10;            String tensionArterielle = request.getParameter(&quot;tensionArterielle&quot;);&#10;            String frequenceCardiaqueStr = request.getParameter(&quot;frequenceCardiaque&quot;);&#10;            String temperatureStr = request.getParameter(&quot;temperature&quot;);&#10;            String frequenceRespiratoireStr = request.getParameter(&quot;frequenceRespiratoire&quot;);&#10;            String poidsStr = request.getParameter(&quot;poids&quot;);&#10;            String tailleStr = request.getParameter(&quot;taille&quot;);&#10;            &#10;            Integer frequenceCardiaque = (frequenceCardiaqueStr != null &amp;&amp; !frequenceCardiaqueStr.isEmpty()) &#10;                ? Integer.parseInt(frequenceCardiaqueStr) : null;&#10;            Double temperature = (temperatureStr != null &amp;&amp; !temperatureStr.isEmpty()) &#10;                ? Double.parseDouble(temperatureStr) : null;&#10;            Integer frequenceRespiratoire = (frequenceRespiratoireStr != null &amp;&amp; !frequenceRespiratoireStr.isEmpty()) &#10;                ? Integer.parseInt(frequenceRespiratoireStr) : null;&#10;            Double poids = (poidsStr != null &amp;&amp; !poidsStr.isEmpty()) &#10;                ? Double.parseDouble(poidsStr) : null;&#10;            Double taille = (tailleStr != null &amp;&amp; !tailleStr.isEmpty()) &#10;                ? Double.parseDouble(tailleStr) : null;&#10;            &#10;            String antecedents = request.getParameter(&quot;antecedents&quot;);&#10;            String allergies = request.getParameter(&quot;allergies&quot;);&#10;            String traitements = request.getParameter(&quot;traitements&quot;);&#10;            &#10;            // Créer le patient&#10;            Patient patient = patientService.creerPatient(&#10;                nom, prenom, dateNaissance, numSecu, adresse, telephone, mutuelle, infirmier,&#10;                tensionArterielle, frequenceCardiaque, temperature, frequenceRespiratoire, poids, taille,&#10;                antecedents, allergies, traitements&#10;            );&#10;            &#10;            session.setAttribute(&quot;successMessage&quot;, &quot;Patient ajouté avec succès !&quot;);&#10;            response.sendRedirect(request.getContextPath() + &quot;/infirmier/dashboard&quot;);&#10;            &#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            session.setAttribute(&quot;errorMessage&quot;, &quot;Erreur : &quot; + e.getMessage());&#10;            response.sendRedirect(request.getContextPath() + &quot;/infirmier/dashboard&quot;);&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/servlet/LoginServlet.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/servlet/LoginServlet.java" />
              <option name="originalContent" value="package com.example.brif04_appteleexpertise_medicale.servlet;&#10;&#10;import com.example.brif04_appteleexpertise_medicale.entity.*;&#10;import com.example.brif04_appteleexpertise_medicale.service.UserService;&#10;import jakarta.servlet.annotation.WebServlet;&#10;import jakarta.servlet.http.HttpServlet;&#10;import jakarta.servlet.http.HttpServletRequest;&#10;import jakarta.servlet.http.HttpServletResponse;&#10;import jakarta.servlet.http.HttpSession;&#10;&#10;@WebServlet(&quot;/login&quot;)&#10;public class LoginServlet extends HttpServlet {&#10;&#10;    private UserService userService = new UserService();&#10;&#10;    @Override&#10;    protected void doGet(HttpServletRequest request, HttpServletResponse response)&#10;            throws jakarta.servlet.ServletException, java.io.IOException {&#10;        request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);&#10;    }&#10;&#10;    @Override&#10;    protected void doPost(HttpServletRequest request, HttpServletResponse response)&#10;            throws jakarta.servlet.ServletException, java.io.IOException {&#10;&#10;        String email = request.getParameter(&quot;email&quot;);&#10;        String password = request.getParameter(&quot;password&quot;);&#10;&#10;        try {&#10;            if (email == null || email.trim().isEmpty() ||&#10;                password == null || password.trim().isEmpty()) {&#10;&#10;                request.setAttribute(&quot;errorMessage&quot;, &quot;Veuillez remplir tous les champs&quot;);&#10;                request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);&#10;                return;&#10;            }&#10;&#10;            Utilisateur utilisateur = userService.authenticateUser(email, password);&#10;&#10;            if (utilisateur == null) {&#10;                request.setAttribute(&quot;errorMessage&quot;, &quot;Email ou mot de passe incorrect&quot;);&#10;                request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);&#10;                return;&#10;            }&#10;&#10;&#10;            HttpSession session = request.getSession();&#10;            session.setAttribute(&quot;utilisateur&quot;, utilisateur);&#10;            session.setAttribute(&quot;userId&quot;, utilisateur.getId());&#10;            session.setAttribute(&quot;userName&quot;, utilisateur.getNom() + &quot; &quot; + utilisateur.getPrenom());&#10;&#10;            String redirectUrl = getRedirectUrlByRole(utilisateur);&#10;            request.getRequestDispatcher(redirectUrl).forward(request, response);&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            request.setAttribute(&quot;errorMessage&quot;, &quot;Une erreur s'est produite : &quot; + e.getMessage());&#10;            request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);&#10;        }&#10;    }&#10;&#10;    private String getRedirectUrlByRole(Utilisateur utilisateur) {&#10;&#10;        if (utilisateur instanceof Infirmier) {&#10;            return &quot;/WEB-INF/views/infirmier/infirmier.jsp&quot;;&#10;        }&#10;        else if (utilisateur instanceof MedecinGeneraliste) {&#10;            return &quot;/WEB-INF/views/generaliste/generaliste.jsp&quot;;&#10;        }&#10;        else if (utilisateur instanceof MedecinSpecialiste) {&#10;            return &quot;/WEB-INF/views/specialiste/specialiste.jsp&quot;;&#10;        }&#10;&#10;        return &quot;/login.jsp&quot;;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.brif04_appteleexpertise_medicale.servlet;&#10;&#10;import com.example.brif04_appteleexpertise_medicale.entity.*;&#10;import com.example.brif04_appteleexpertise_medicale.service.UserService;&#10;import jakarta.servlet.annotation.WebServlet;&#10;import jakarta.servlet.http.HttpServlet;&#10;import jakarta.servlet.http.HttpServletRequest;&#10;import jakarta.servlet.http.HttpServletResponse;&#10;import jakarta.servlet.http.HttpSession;&#10;&#10;@WebServlet(&quot;/login&quot;)&#10;public class LoginServlet extends HttpServlet {&#10;&#10;    private UserService userService = new UserService();&#10;&#10;    @Override&#10;    protected void doGet(HttpServletRequest request, HttpServletResponse response)&#10;            throws jakarta.servlet.ServletException, java.io.IOException {&#10;        request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);&#10;    }&#10;&#10;    @Override&#10;    protected void doPost(HttpServletRequest request, HttpServletResponse response)&#10;            throws jakarta.servlet.ServletException, java.io.IOException {&#10;&#10;        String email = request.getParameter(&quot;email&quot;);&#10;        String password = request.getParameter(&quot;password&quot;);&#10;&#10;        try {&#10;            if (email == null || email.trim().isEmpty() ||&#10;                password == null || password.trim().isEmpty()) {&#10;&#10;                request.setAttribute(&quot;errorMessage&quot;, &quot;Veuillez remplir tous les champs&quot;);&#10;                request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);&#10;                return;&#10;            }&#10;&#10;            Utilisateur utilisateur = userService.authenticateUser(email, password);&#10;&#10;            if (utilisateur == null) {&#10;                request.setAttribute(&quot;errorMessage&quot;, &quot;Email ou mot de passe incorrect&quot;);&#10;                request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);&#10;                return;&#10;            }&#10;&#10;&#10;            HttpSession session = request.getSession();&#10;            session.setAttribute(&quot;utilisateur&quot;, utilisateur);&#10;            session.setAttribute(&quot;userId&quot;, utilisateur.getId());&#10;            session.setAttribute(&quot;userName&quot;, utilisateur.getNom() + &quot; &quot; + utilisateur.getPrenom());&#10;&#10;            // Rediriger vers le servlet dashboard correspondant (sendRedirect pour exécuter la servlet)&#10;            String redirectUrl = getRedirectUrlByRole(utilisateur);&#10;            response.sendRedirect(request.getContextPath() + redirectUrl);&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            request.setAttribute(&quot;errorMessage&quot;, &quot;Une erreur s'est produite : &quot; + e.getMessage());&#10;            request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);&#10;        }&#10;    }&#10;&#10;    private String getRedirectUrlByRole(Utilisateur utilisateur) {&#10;&#10;        if (utilisateur instanceof Infirmier) {&#10;            return &quot;/infirmier/dashboard&quot;;&#10;        }&#10;        else if (utilisateur instanceof MedecinGeneraliste) {&#10;            return &quot;/generaliste/dashboard&quot;;&#10;        }&#10;        else if (utilisateur instanceof MedecinSpecialiste) {&#10;            return &quot;/specialiste/dashboard&quot;;&#10;        }&#10;&#10;        return &quot;/login.jsp&quot;;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/servlet/PatientDeleteServlet.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/brif04_appteleexpertise_medicale/servlet/PatientDeleteServlet.java" />
              <option name="updatedContent" value="// Ce fichier a été supprimé intentionnellement — la logique de suppression des patients&#10;// a été intégrée directement dans `PatientServlet` (mappée sur&#10;// &quot;/infirmier/ajouterPatient&quot; et &quot;/infirmier/supprimerPatient&quot;).&#10;//&#10;// J'ai laissé ce fichier vide (commentaire) pour ne pas ajouter de nouvelle&#10;// servlet active. Si vous voulez le supprimer physiquement, vous pouvez&#10;// l'enlever du projet depuis l'explorateur de fichiers.&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/webapp/WEB-INF/views/infirmier/infirmier.jsp">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/webapp/WEB-INF/views/infirmier/infirmier.jsp" />
              <option name="originalContent" value="&lt;%--&#10;  Created by IntelliJ IDEA.&#10;  User: LENOVO&#10;  Date: 15/10/2025&#10;  Time: 09:38&#10;  To change this template use File | Settings | File Templates.&#10;--%&gt;&#10;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Espace Infirmier - Télé-Expertise Médicale&lt;/title&gt;&#10;    &lt;style&gt;&#10;        * {&#10;            margin: 0;&#10;            padding: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        body {&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            min-height: 100vh;&#10;            padding: 20px;&#10;        }&#10;&#10;        /* Header avec nom et déconnexion */&#10;        .header {&#10;            background: white;&#10;            border-radius: 15px;&#10;            padding: 20px 30px;&#10;            margin-bottom: 25px;&#10;            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: center;&#10;        }&#10;&#10;        .welcome {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 15px;&#10;        }&#10;&#10;        .welcome-icon {&#10;            width: 50px;&#10;            height: 50px;&#10;            background: linear-gradient(135deg, #667eea, #764ba2);&#10;            border-radius: 50%;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            color: white;&#10;            font-size: 24px;&#10;            font-weight: bold;&#10;        }&#10;&#10;        .welcome-text h2 {&#10;            color: #333;&#10;            font-size: 1.5rem;&#10;            margin-bottom: 5px;&#10;        }&#10;&#10;        .welcome-text p {&#10;            color: #666;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .btn-deconnexion {&#10;            background: #e74c3c;&#10;            color: white;&#10;            border: none;&#10;            padding: 12px 25px;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            font-weight: 600;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;            box-shadow: 0 4px 10px rgba(231, 76, 60, 0.3);&#10;        }&#10;&#10;        .btn-deconnexion:hover {&#10;            background: #c0392b;&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 6px 15px rgba(231, 76, 60, 0.4);&#10;        }&#10;&#10;        /* Section Statistiques */&#10;        .stats-container {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;            gap: 20px;&#10;            margin-bottom: 25px;&#10;        }&#10;&#10;        .stat-card {&#10;            background: white;&#10;            border-radius: 15px;&#10;            padding: 25px;&#10;            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);&#10;            transition: transform 0.3s ease;&#10;        }&#10;&#10;        .stat-card:hover {&#10;            transform: translateY(-5px);&#10;        }&#10;&#10;        .stat-card-header {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 15px;&#10;            margin-bottom: 15px;&#10;        }&#10;&#10;        .stat-icon {&#10;            width: 50px;&#10;            height: 50px;&#10;            border-radius: 12px;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            font-size: 24px;&#10;        }&#10;&#10;        .stat-icon.patients {&#10;            background: linear-gradient(135deg, #667eea, #764ba2);&#10;            color: white;&#10;        }&#10;&#10;        .stat-icon.attente {&#10;            background: linear-gradient(135deg, #f093fb, #f5576c);&#10;            color: white;&#10;        }&#10;&#10;        .stat-icon.traites {&#10;            background: linear-gradient(135deg, #4facfe, #00f2fe);&#10;            color: white;&#10;        }&#10;&#10;        .stat-info h3 {&#10;            color: #666;&#10;            font-size: 0.9rem;&#10;            font-weight: 500;&#10;            margin-bottom: 5px;&#10;        }&#10;&#10;        .stat-number {&#10;            color: #333;&#10;            font-size: 2rem;&#10;            font-weight: 700;&#10;        }&#10;&#10;        /* Section principale */&#10;        .main-section {&#10;            background: white;&#10;            border-radius: 15px;&#10;            padding: 30px;&#10;            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);&#10;        }&#10;&#10;        .section-header {&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: center;&#10;            margin-bottom: 25px;&#10;        }&#10;&#10;        .section-header h2 {&#10;            color: #333;&#10;            font-size: 1.5rem;&#10;        }&#10;&#10;        .btn-primary {&#10;            background: linear-gradient(135deg, #667eea, #764ba2);&#10;            color: white;&#10;            border: none;&#10;            padding: 12px 30px;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            font-weight: 600;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;&#10;        .btn-primary:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);&#10;        }&#10;&#10;        /* Formulaire d'ajout patient */&#10;        .form-container {&#10;            display: none;&#10;            background: #f8f9fa;&#10;            border-radius: 12px;&#10;            padding: 25px;&#10;            margin-bottom: 25px;&#10;            animation: slideDown 0.3s ease;&#10;        }&#10;&#10;        .form-container.active {&#10;            display: block;&#10;        }&#10;&#10;        @keyframes slideDown {&#10;            from {&#10;                opacity: 0;&#10;                transform: translateY(-20px);&#10;            }&#10;            to {&#10;                opacity: 1;&#10;                transform: translateY(0);&#10;            }&#10;        }&#10;&#10;        .form-grid {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;            gap: 20px;&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .form-group {&#10;            display: flex;&#10;            flex-direction: column;&#10;        }&#10;&#10;        .form-group label {&#10;            color: #333;&#10;            font-weight: 600;&#10;            margin-bottom: 8px;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group input,&#10;        .form-group textarea {&#10;            padding: 12px 15px;&#10;            border: 2px solid #e0e0e0;&#10;            border-radius: 8px;&#10;            font-size: 1rem;&#10;            transition: all 0.3s ease;&#10;            background: white;&#10;        }&#10;&#10;        .form-group input:focus,&#10;        .form-group textarea:focus {&#10;            outline: none;&#10;            border-color: #667eea;&#10;            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);&#10;        }&#10;&#10;        .form-section-title {&#10;            color: #667eea;&#10;            font-size: 1.2rem;&#10;            font-weight: 700;&#10;            margin: 20px 0 15px 0;&#10;            padding-bottom: 10px;&#10;            border-bottom: 2px solid #667eea;&#10;        }&#10;&#10;        .form-actions {&#10;            display: flex;&#10;            gap: 15px;&#10;            justify-content: flex-end;&#10;        }&#10;&#10;        .btn-secondary {&#10;            background: #6c757d;&#10;            color: white;&#10;            border: none;&#10;            padding: 12px 30px;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            font-weight: 600;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;        }&#10;&#10;        .btn-secondary:hover {&#10;            background: #5a6268;&#10;        }&#10;&#10;        /* Table des patients */&#10;        .patients-table {&#10;            width: 100%;&#10;            border-collapse: collapse;&#10;            margin-top: 20px;&#10;        }&#10;&#10;        .patients-table thead {&#10;            background: linear-gradient(135deg, #667eea, #764ba2);&#10;            color: white;&#10;        }&#10;&#10;        .patients-table th {&#10;            padding: 15px;&#10;            text-align: left;&#10;            font-weight: 600;&#10;        }&#10;&#10;        .patients-table tbody tr {&#10;            border-bottom: 1px solid #e0e0e0;&#10;            transition: background 0.2s ease;&#10;        }&#10;&#10;        .patients-table tbody tr:hover {&#10;            background: #f8f9fa;&#10;        }&#10;&#10;        .patients-table td {&#10;            padding: 15px;&#10;            color: #333;&#10;        }&#10;&#10;        .badge {&#10;            padding: 5px 12px;&#10;            border-radius: 20px;&#10;            font-size: 0.85rem;&#10;            font-weight: 600;&#10;        }&#10;&#10;        .badge-attente {&#10;            background: #fff3cd;&#10;            color: #856404;&#10;        }&#10;&#10;        .badge-termine {&#10;            background: #d4edda;&#10;            color: #155724;&#10;        }&#10;&#10;        .empty-state {&#10;            text-align: center;&#10;            padding: 40px;&#10;            color: #999;&#10;        }&#10;&#10;        .empty-state-icon {&#10;            font-size: 4rem;&#10;            margin-bottom: 15px;&#10;        }&#10;&#10;        /* Alert messages */&#10;        .alert {&#10;            padding: 12px 18px;&#10;            border-radius: 10px;&#10;            margin-bottom: 20px;&#10;            font-weight: 600;&#10;        }&#10;        .alert-success { background: #d4edda; color: #155724; }&#10;        .alert-error { background: #f8d7da; color: #721c24; }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&#10;&lt;!-- Header avec nom et déconnexion --&gt;&#10;&lt;div class=&quot;header&quot;&gt;&#10;    &lt;div class=&quot;welcome&quot;&gt;&#10;        &lt;div class=&quot;welcome-icon&quot;&gt;&#10;            &lt;!-- Première lettre du nom --&gt;&#10;            ${sessionScope.utilisateur.nom.substring(0, 1)}&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;welcome-text&quot;&gt;&#10;            &lt;h2&gt;Bonjour, ${sessionScope.utilisateur.prenom} ${sessionScope.utilisateur.nom}&lt;/h2&gt;&#10;            &lt;p&gt;Infirmier(ère) | Espace de Gestion des Patients&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &lt;form action=&quot;${pageContext.request.contextPath}/logout&quot; method=&quot;post&quot; style=&quot;margin: 0;&quot;&gt;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn-deconnexion&quot;&gt; Déconnexion&lt;/button&gt;&#10;    &lt;/form&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Messages de session (succès / erreur) --&gt;&#10;&lt;c:if test=&quot;${not empty sessionScope.successMessage}&quot;&gt;&#10;    &lt;div class=&quot;alert alert-success&quot;&gt;${sessionScope.successMessage}&lt;/div&gt;&#10;    &lt;c:remove var=&quot;successMessage&quot; scope=&quot;session&quot; /&gt;&#10;&lt;/c:if&gt;&#10;&#10;&lt;c:if test=&quot;${not empty sessionScope.errorMessage}&quot;&gt;&#10;    &lt;div class=&quot;alert alert-error&quot;&gt;${sessionScope.errorMessage}&lt;/div&gt;&#10;    &lt;c:remove var=&quot;errorMessage&quot; scope=&quot;session&quot; /&gt;&#10;&lt;/c:if&gt;&#10;&#10;&lt;!-- Statistiques --&gt;&#10;&lt;div class=&quot;stats-container&quot;&gt;&#10;    &lt;div class=&quot;stat-card&quot;&gt;&#10;        &lt;div class=&quot;stat-card-header&quot;&gt;&#10;            &lt;div class=&quot;stat-icon patients&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;stat-info&quot;&gt;&#10;                &lt;h3&gt;Total Patients&lt;/h3&gt;&#10;                &lt;div class=&quot;stat-number&quot;&gt;${totalPatients != null ? totalPatients : 0}&lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;stat-card&quot;&gt;&#10;        &lt;div class=&quot;stat-card-header&quot;&gt;&#10;            &lt;div class=&quot;stat-icon attente&quot;&gt;⏳&lt;/div&gt;&#10;            &lt;div class=&quot;stat-info&quot;&gt;&#10;                &lt;h3&gt;En Attente&lt;/h3&gt;&#10;                &lt;div class=&quot;stat-number&quot;&gt;${patientsEnAttente != null ? patientsEnAttente : 0}&lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;stat-card&quot;&gt;&#10;        &lt;div class=&quot;stat-card-header&quot;&gt;&#10;            &lt;div class=&quot;stat-icon traites&quot;&gt;✅&lt;/div&gt;&#10;            &lt;div class=&quot;stat-info&quot;&gt;&#10;                &lt;h3&gt;Patients Traités&lt;/h3&gt;&#10;                &lt;div class=&quot;stat-number&quot;&gt;${patientsTraites != null ? patientsTraites : 0}&lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Section principale --&gt;&#10;&lt;div class=&quot;main-section&quot;&gt;&#10;    &lt;div class=&quot;section-header&quot;&gt;&#10;        &lt;h2&gt; Gestion des Patients&lt;/h2&gt;&#10;        &lt;button class=&quot;btn-primary&quot; onclick=&quot;toggleForm()&quot;&gt;➕ Ajouter un Patient&lt;/button&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- Formulaire d'ajout patient (caché par défaut) --&gt;&#10;    &lt;div class=&quot;form-container&quot; id=&quot;patientForm&quot;&gt;&#10;        &lt;h3 style=&quot;color: #333; margin-bottom: 20px;&quot;&gt;Nouveau Patient&lt;/h3&gt;&#10;        &lt;form action=&quot;${pageContext.request.contextPath}/infirmier/ajouterPatient&quot; method=&quot;post&quot;&gt;&#10;&#10;            &lt;!-- Informations personnelles --&gt;&#10;            &lt;div class=&quot;form-section-title&quot;&gt; Informations Personnelles&lt;/div&gt;&#10;            &lt;div class=&quot;form-grid&quot;&gt;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;nom&quot;&gt;Nom *&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;nom&quot; name=&quot;nom&quot; required&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;prenom&quot;&gt;Prénom *&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;prenom&quot; name=&quot;prenom&quot; required&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;dateNaissance&quot;&gt;Date de Naissance *&lt;/label&gt;&#10;                    &lt;input type=&quot;date&quot; id=&quot;dateNaissance&quot; name=&quot;dateNaissance&quot; required&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;numSecu&quot;&gt;N° Sécurité Sociale *&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;numSecu&quot; name=&quot;numSecu&quot; required&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-grid&quot;&gt;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;telephone&quot;&gt;Téléphone&lt;/label&gt;&#10;                    &lt;input type=&quot;tel&quot; id=&quot;telephone&quot; name=&quot;telephone&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;mutuelle&quot;&gt;Mutuelle&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;mutuelle&quot; name=&quot;mutuelle&quot;&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;adresse&quot;&gt;Adresse&lt;/label&gt;&#10;                &lt;textarea id=&quot;adresse&quot; name=&quot;adresse&quot; rows=&quot;2&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Signes Vitaux --&gt;&#10;            &lt;div class=&quot;form-section-title&quot;&gt; Signes Vitaux&lt;/div&gt;&#10;            &lt;div class=&quot;form-grid&quot;&gt;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;tensionArterielle&quot;&gt;Tension Artérielle (mmHg)&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;tensionArterielle&quot; name=&quot;tensionArterielle&quot; placeholder=&quot;ex: 120/80&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;frequenceCardiaque&quot;&gt;Fréquence Cardiaque (bpm)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; id=&quot;frequenceCardiaque&quot; name=&quot;frequenceCardiaque&quot; placeholder=&quot;ex: 75&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;temperature&quot;&gt;Température (°C)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; step=&quot;0.1&quot; id=&quot;temperature&quot; name=&quot;temperature&quot; placeholder=&quot;ex: 37.5&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;frequenceRespiratoire&quot;&gt;Fréquence Respiratoire (cycles/min)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; id=&quot;frequenceRespiratoire&quot; name=&quot;frequenceRespiratoire&quot; placeholder=&quot;ex: 16&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;poids&quot;&gt;Poids (kg)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; step=&quot;0.1&quot; id=&quot;poids&quot; name=&quot;poids&quot; placeholder=&quot;ex: 70.5&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;taille&quot;&gt;Taille (cm)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; id=&quot;taille&quot; name=&quot;taille&quot; placeholder=&quot;ex: 175&quot;&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Dossier Médical --&gt;&#10;            &lt;div class=&quot;form-section-title&quot;&gt; Dossier Médical&lt;/div&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;antecedents&quot;&gt;Antécédents Médicaux&lt;/label&gt;&#10;                &lt;textarea id=&quot;antecedents&quot; name=&quot;antecedents&quot; rows=&quot;3&quot; placeholder=&quot;ex: Diabète, Hypertension...&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;allergies&quot;&gt;Allergies&lt;/label&gt;&#10;                &lt;textarea id=&quot;allergies&quot; name=&quot;allergies&quot; rows=&quot;2&quot; placeholder=&quot;ex: Pénicilline, Arachides...&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;traitements&quot;&gt;Traitements en Cours&lt;/label&gt;&#10;                &lt;textarea id=&quot;traitements&quot; name=&quot;traitements&quot; rows=&quot;3&quot; placeholder=&quot;ex: Metformine 500mg, 2x/jour...&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Actions --&gt;&#10;            &lt;div class=&quot;form-actions&quot;&gt;&#10;                &lt;button type=&quot;button&quot; class=&quot;btn-secondary&quot; onclick=&quot;toggleForm()&quot;&gt;Annuler&lt;/button&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn-primary&quot;&gt; Enregistrer le Patient&lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- Liste des patients --&gt;&#10;    &lt;c:choose&gt;&#10;        &lt;c:when test=&quot;${empty patients}&quot;&gt;&#10;            &lt;div class=&quot;empty-state&quot;&gt;&#10;                &lt;div class=&quot;empty-state-icon&quot;&gt;&lt;/div&gt;&#10;                &lt;h3&gt;Aucun patient enregistré&lt;/h3&gt;&#10;                &lt;p&gt;Cliquez sur &quot;Ajouter un Patient&quot; pour commencer&lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/c:when&gt;&#10;        &lt;c:otherwise&gt;&#10;            &lt;table class=&quot;patients-table&quot;&gt;&#10;                &lt;thead&gt;&#10;                    &lt;tr&gt;&#10;                        &lt;th&gt;N° Sécu&lt;/th&gt;&#10;                        &lt;th&gt;Nom Complet&lt;/th&gt;&#10;                        &lt;th&gt;Date Naissance&lt;/th&gt;&#10;                        &lt;th&gt;Téléphone&lt;/th&gt;&#10;                        &lt;th&gt;Statut&lt;/th&gt;&#10;                        &lt;th&gt;Actions&lt;/th&gt;&#10;                    &lt;/tr&gt;&#10;                &lt;/thead&gt;&#10;                &lt;tbody&gt;&#10;                    &lt;c:forEach items=&quot;${patients}&quot; var=&quot;patient&quot;&gt;&#10;                        &lt;tr&gt;&#10;                            &lt;td&gt;${patient.numSecu}&lt;/td&gt;&#10;                            &lt;td&gt;&lt;strong&gt;${patient.nom} ${patient.prenom}&lt;/strong&gt;&lt;/td&gt;&#10;                            &lt;td&gt;${patient.dateNaissance}&lt;/td&gt;&#10;                            &lt;td&gt;${patient.telephone}&lt;/td&gt;&#10;                            &lt;td&gt;&#10;                                &lt;c:choose&gt;&#10;                                    &lt;c:when test=&quot;${patient.fileAttente}&quot;&gt;&#10;                                        &lt;span class=&quot;badge badge-attente&quot;&gt;⏳ En Attente&lt;/span&gt;&#10;                                    &lt;/c:when&gt;&#10;                                    &lt;c:otherwise&gt;&#10;                                        &lt;span class=&quot;badge badge-termine&quot;&gt;✅ Traité&lt;/span&gt;&#10;                                    &lt;/c:otherwise&gt;&#10;                                &lt;/c:choose&gt;&#10;                            &lt;/td&gt;&#10;                            &lt;td&gt;&#10;                                &lt;a class=&quot;btn-primary&quot;&#10;                                   href=&quot;${pageContext.request.contextPath}/infirmier/modifierPatient?id=${patient.id}&quot;&#10;                                   style=&quot;padding:8px 12px; font-size:0.9rem; text-decoration:none; display:inline-block;&quot;&gt;&#10;                                    ✏️ Modifier&#10;                                &lt;/a&gt;&#10;&#10;                                &lt;form action=&quot;${pageContext.request.contextPath}/infirmier/supprimerPatient&quot; method=&quot;post&quot;&#10;                                      style=&quot;display:inline-block; margin-left:8px;&quot;&#10;                                      onsubmit=&quot;return confirm('Confirmer la suppression du patient ?');&quot;&gt;&#10;                                    &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;${patient.id}&quot; /&gt;&#10;                                    &lt;button type=&quot;submit&quot; class=&quot;btn-secondary&quot;&#10;                                            style=&quot;padding:8px 12px; font-size:0.9rem; background:#e74c3c; border:none; color:white; border-radius:8px;&quot;&gt;&#10;                                        ️ Supprimer&#10;                                    &lt;/button&gt;&#10;                                &lt;/form&gt;&#10;                            &lt;/td&gt;&#10;                        &lt;/tr&gt;&#10;                    &lt;/c:forEach&gt;&#10;                &lt;/tbody&gt;&#10;            &lt;/table&gt;&#10;        &lt;/c:otherwise&gt;&#10;    &lt;/c:choose&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;script&gt;&#10;    function toggleForm() {&#10;        const form = document.getElementById('patientForm');&#10;        form.classList.toggle('active');&#10;&#10;        if (form.classList.contains('active')) {&#10;            form.scrollIntoView({ behavior: 'smooth', block: 'nearest' });&#10;        }&#10;    }&#10;&lt;/script&gt;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;%--&#10;  Created by IntelliJ IDEA.&#10;  User: LENOVO&#10;  Date: 15/10/2025&#10;  Time: 09:38&#10;  To change this template use File | Settings | File Templates.&#10;--%&gt;&#10;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Espace Infirmier - Télé-Expertise Médicale&lt;/title&gt;&#10;    &lt;style&gt;&#10;        * {&#10;            margin: 0;&#10;            padding: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        body {&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            min-height: 100vh;&#10;            padding: 20px;&#10;        }&#10;&#10;        /* Header avec nom et déconnexion */&#10;        .header {&#10;            background: white;&#10;            border-radius: 15px;&#10;            padding: 20px 30px;&#10;            margin-bottom: 25px;&#10;            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: center;&#10;        }&#10;&#10;        .welcome {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 15px;&#10;        }&#10;&#10;        .welcome-icon {&#10;            width: 50px;&#10;            height: 50px;&#10;            background: linear-gradient(135deg, #667eea, #764ba2);&#10;            border-radius: 50%;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            color: white;&#10;            font-size: 24px;&#10;            font-weight: bold;&#10;        }&#10;&#10;        .welcome-text h2 {&#10;            color: #333;&#10;            font-size: 1.5rem;&#10;            margin-bottom: 5px;&#10;        }&#10;&#10;        .welcome-text p {&#10;            color: #666;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .btn-deconnexion {&#10;            background: #e74c3c;&#10;            color: white;&#10;            border: none;&#10;            padding: 12px 25px;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            font-weight: 600;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;            box-shadow: 0 4px 10px rgba(231, 76, 60, 0.3);&#10;        }&#10;&#10;        .btn-deconnexion:hover {&#10;            background: #c0392b;&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 6px 15px rgba(231, 76, 60, 0.4);&#10;        }&#10;&#10;        /* Section Statistiques */&#10;        .stats-container {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;            gap: 20px;&#10;            margin-bottom: 25px;&#10;        }&#10;&#10;        .stat-card {&#10;            background: white;&#10;            border-radius: 15px;&#10;            padding: 25px;&#10;            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);&#10;            transition: transform 0.3s ease;&#10;        }&#10;&#10;        .stat-card:hover {&#10;            transform: translateY(-5px);&#10;        }&#10;&#10;        .stat-card-header {&#10;            display: flex;&#10;            align-items: center;&#10;            gap: 15px;&#10;            margin-bottom: 15px;&#10;        }&#10;&#10;        .stat-icon {&#10;            width: 50px;&#10;            height: 50px;&#10;            border-radius: 12px;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            font-size: 24px;&#10;        }&#10;&#10;        .stat-icon.patients {&#10;            background: linear-gradient(135deg, #667eea, #764ba2);&#10;            color: white;&#10;        }&#10;&#10;        .stat-icon.attente {&#10;            background: linear-gradient(135deg, #f093fb, #f5576c);&#10;            color: white;&#10;        }&#10;&#10;        .stat-icon.traites {&#10;            background: linear-gradient(135deg, #4facfe, #00f2fe);&#10;            color: white;&#10;        }&#10;&#10;        .stat-info h3 {&#10;            color: #666;&#10;            font-size: 0.9rem;&#10;            font-weight: 500;&#10;            margin-bottom: 5px;&#10;        }&#10;&#10;        .stat-number {&#10;            color: #333;&#10;            font-size: 2rem;&#10;            font-weight: 700;&#10;        }&#10;&#10;        /* Section principale */&#10;        .main-section {&#10;            background: white;&#10;            border-radius: 15px;&#10;            padding: 30px;&#10;            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);&#10;        }&#10;&#10;        .section-header {&#10;            display: flex;&#10;            justify-content: space-between;&#10;            align-items: center;&#10;            margin-bottom: 25px;&#10;        }&#10;&#10;        .section-header h2 {&#10;            color: #333;&#10;            font-size: 1.5rem;&#10;        }&#10;&#10;        .btn-primary {&#10;            background: linear-gradient(135deg, #667eea, #764ba2);&#10;            color: white;&#10;            border: none;&#10;            padding: 12px 30px;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            font-weight: 600;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;&#10;        .btn-primary:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);&#10;        }&#10;&#10;        /* Formulaire d'ajout patient */&#10;        .form-container {&#10;            display: none;&#10;            background: #f8f9fa;&#10;            border-radius: 12px;&#10;            padding: 25px;&#10;            margin-bottom: 25px;&#10;            animation: slideDown 0.3s ease;&#10;        }&#10;&#10;        .form-container.active {&#10;            display: block;&#10;        }&#10;&#10;        @keyframes slideDown {&#10;            from {&#10;                opacity: 0;&#10;                transform: translateY(-20px);&#10;            }&#10;            to {&#10;                opacity: 1;&#10;                transform: translateY(0);&#10;            }&#10;        }&#10;&#10;        .form-grid {&#10;            display: grid;&#10;            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;            gap: 20px;&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .form-group {&#10;            display: flex;&#10;            flex-direction: column;&#10;        }&#10;&#10;        .form-group label {&#10;            color: #333;&#10;            font-weight: 600;&#10;            margin-bottom: 8px;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group input,&#10;        .form-group textarea {&#10;            padding: 12px 15px;&#10;            border: 2px solid #e0e0e0;&#10;            border-radius: 8px;&#10;            font-size: 1rem;&#10;            transition: all 0.3s ease;&#10;            background: white;&#10;        }&#10;&#10;        .form-group input:focus,&#10;        .form-group textarea:focus {&#10;            outline: none;&#10;            border-color: #667eea;&#10;            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);&#10;        }&#10;&#10;        .form-section-title {&#10;            color: #667eea;&#10;            font-size: 1.2rem;&#10;            font-weight: 700;&#10;            margin: 20px 0 15px 0;&#10;            padding-bottom: 10px;&#10;            border-bottom: 2px solid #667eea;&#10;        }&#10;&#10;        .form-actions {&#10;            display: flex;&#10;            gap: 15px;&#10;            justify-content: flex-end;&#10;        }&#10;&#10;        .btn-secondary {&#10;            background: #6c757d;&#10;            color: white;&#10;            border: none;&#10;            padding: 12px 30px;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            font-weight: 600;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;        }&#10;&#10;        .btn-secondary:hover {&#10;            background: #5a6268;&#10;        }&#10;&#10;        /* Table des patients */&#10;        .patients-table {&#10;            width: 100%;&#10;            border-collapse: collapse;&#10;            margin-top: 20px;&#10;        }&#10;&#10;        .patients-table thead {&#10;            background: linear-gradient(135deg, #667eea, #764ba2);&#10;            color: white;&#10;        }&#10;&#10;        .patients-table th {&#10;            padding: 15px;&#10;            text-align: left;&#10;            font-weight: 600;&#10;        }&#10;&#10;        .patients-table tbody tr {&#10;            border-bottom: 1px solid #e0e0e0;&#10;            transition: background 0.2s ease;&#10;        }&#10;&#10;        .patients-table tbody tr:hover {&#10;            background: #f8f9fa;&#10;        }&#10;&#10;        .patients-table td {&#10;            padding: 15px;&#10;            color: #333;&#10;        }&#10;&#10;        .badge {&#10;            padding: 5px 12px;&#10;            border-radius: 20px;&#10;            font-size: 0.85rem;&#10;            font-weight: 600;&#10;        }&#10;&#10;        .badge-attente {&#10;            background: #fff3cd;&#10;            color: #856404;&#10;        }&#10;&#10;        .badge-termine {&#10;            background: #d4edda;&#10;            color: #155724;&#10;        }&#10;&#10;        .empty-state {&#10;            text-align: center;&#10;            padding: 40px;&#10;            color: #999;&#10;        }&#10;&#10;        .empty-state-icon {&#10;            font-size: 4rem;&#10;            margin-bottom: 15px;&#10;        }&#10;&#10;        /* Alert messages */&#10;        .alert {&#10;            padding: 12px 18px;&#10;            border-radius: 10px;&#10;            margin-bottom: 20px;&#10;            font-weight: 600;&#10;        }&#10;        .alert-success { background: #d4edda; color: #155724; }&#10;        .alert-error { background: #f8d7da; color: #721c24; }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&#10;&lt;!-- Header avec nom et déconnexion --&gt;&#10;&lt;div class=&quot;header&quot;&gt;&#10;    &lt;div class=&quot;welcome&quot;&gt;&#10;        &lt;div class=&quot;welcome-icon&quot;&gt;&#10;            &lt;!-- Première lettre du nom --&gt;&#10;            ${sessionScope.utilisateur.nom.substring(0, 1)}&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;welcome-text&quot;&gt;&#10;            &lt;h2&gt;Bonjour, ${sessionScope.utilisateur.prenom} ${sessionScope.utilisateur.nom}&lt;/h2&gt;&#10;            &lt;p&gt;Infirmier(ère) | Espace de Gestion des Patients&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &lt;form action=&quot;${pageContext.request.contextPath}/logout&quot; method=&quot;post&quot; style=&quot;margin: 0;&quot;&gt;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn-deconnexion&quot;&gt; Déconnexion&lt;/button&gt;&#10;    &lt;/form&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Messages de session (succès / erreur) --&gt;&#10;&lt;c:if test=&quot;${not empty sessionScope.successMessage}&quot;&gt;&#10;    &lt;div class=&quot;alert alert-success&quot;&gt;${sessionScope.successMessage}&lt;/div&gt;&#10;    &lt;c:remove var=&quot;successMessage&quot; scope=&quot;session&quot; /&gt;&#10;&lt;/c:if&gt;&#10;&#10;&lt;c:if test=&quot;${not empty sessionScope.errorMessage}&quot;&gt;&#10;    &lt;div class=&quot;alert alert-error&quot;&gt;${sessionScope.errorMessage}&lt;/div&gt;&#10;    &lt;c:remove var=&quot;errorMessage&quot; scope=&quot;session&quot; /&gt;&#10;&lt;/c:if&gt;&#10;&#10;&lt;!-- Statistiques --&gt;&#10;&lt;div class=&quot;stats-container&quot;&gt;&#10;    &lt;div class=&quot;stat-card&quot;&gt;&#10;        &lt;div class=&quot;stat-card-header&quot;&gt;&#10;            &lt;div class=&quot;stat-icon patients&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;stat-info&quot;&gt;&#10;                &lt;h3&gt;Total Patients&lt;/h3&gt;&#10;                &lt;div class=&quot;stat-number&quot;&gt;${totalPatients != null ? totalPatients : 0}&lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;stat-card&quot;&gt;&#10;        &lt;div class=&quot;stat-card-header&quot;&gt;&#10;            &lt;div class=&quot;stat-icon attente&quot;&gt;⏳&lt;/div&gt;&#10;            &lt;div class=&quot;stat-info&quot;&gt;&#10;                &lt;h3&gt;En Attente&lt;/h3&gt;&#10;                &lt;div class=&quot;stat-number&quot;&gt;${patientsEnAttente != null ? patientsEnAttente : 0}&lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;stat-card&quot;&gt;&#10;        &lt;div class=&quot;stat-card-header&quot;&gt;&#10;            &lt;div class=&quot;stat-icon traites&quot;&gt;✅&lt;/div&gt;&#10;            &lt;div class=&quot;stat-info&quot;&gt;&#10;                &lt;h3&gt;Patients Traités&lt;/h3&gt;&#10;                &lt;div class=&quot;stat-number&quot;&gt;${patientsTraites != null ? patientsTraites : 0}&lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Section principale --&gt;&#10;&lt;div class=&quot;main-section&quot;&gt;&#10;    &lt;div class=&quot;section-header&quot;&gt;&#10;        &lt;h2&gt; Gestion des Patients&lt;/h2&gt;&#10;        &lt;button class=&quot;btn-primary&quot; onclick=&quot;toggleForm()&quot;&gt;➕ Ajouter un Patient&lt;/button&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- Formulaire d'ajout patient (caché par défaut) --&gt;&#10;    &lt;div class=&quot;form-container&quot; id=&quot;patientForm&quot;&gt;&#10;        &lt;h3 style=&quot;color: #333; margin-bottom: 20px;&quot;&gt;Nouveau Patient&lt;/h3&gt;&#10;        &lt;form action=&quot;${pageContext.request.contextPath}/infirmier/ajouterPatient&quot; method=&quot;post&quot;&gt;&#10;&#10;            &lt;!-- Informations personnelles --&gt;&#10;            &lt;div class=&quot;form-section-title&quot;&gt; Informations Personnelles&lt;/div&gt;&#10;            &lt;div class=&quot;form-grid&quot;&gt;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;nom&quot;&gt;Nom *&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;nom&quot; name=&quot;nom&quot; required&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;prenom&quot;&gt;Prénom *&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;prenom&quot; name=&quot;prenom&quot; required&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;dateNaissance&quot;&gt;Date de Naissance *&lt;/label&gt;&#10;                    &lt;input type=&quot;date&quot; id=&quot;dateNaissance&quot; name=&quot;dateNaissance&quot; required&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;numSecu&quot;&gt;N° Sécurité Sociale *&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;numSecu&quot; name=&quot;numSecu&quot; required&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-grid&quot;&gt;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;telephone&quot;&gt;Téléphone&lt;/label&gt;&#10;                    &lt;input type=&quot;tel&quot; id=&quot;telephone&quot; name=&quot;telephone&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;mutuelle&quot;&gt;Mutuelle&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;mutuelle&quot; name=&quot;mutuelle&quot;&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;adresse&quot;&gt;Adresse&lt;/label&gt;&#10;                &lt;textarea id=&quot;adresse&quot; name=&quot;adresse&quot; rows=&quot;2&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Signes Vitaux --&gt;&#10;            &lt;div class=&quot;form-section-title&quot;&gt; Signes Vitaux&lt;/div&gt;&#10;            &lt;div class=&quot;form-grid&quot;&gt;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;tensionArterielle&quot;&gt;Tension Artérielle (mmHg)&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;tensionArterielle&quot; name=&quot;tensionArterielle&quot; placeholder=&quot;ex: 120/80&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;frequenceCardiaque&quot;&gt;Fréquence Cardiaque (bpm)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; id=&quot;frequenceCardiaque&quot; name=&quot;frequenceCardiaque&quot; placeholder=&quot;ex: 75&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;temperature&quot;&gt;Température (°C)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; step=&quot;0.1&quot; id=&quot;temperature&quot; name=&quot;temperature&quot; placeholder=&quot;ex: 37.5&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;frequenceRespiratoire&quot;&gt;Fréquence Respiratoire (cycles/min)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; id=&quot;frequenceRespiratoire&quot; name=&quot;frequenceRespiratoire&quot; placeholder=&quot;ex: 16&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;poids&quot;&gt;Poids (kg)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; step=&quot;0.1&quot; id=&quot;poids&quot; name=&quot;poids&quot; placeholder=&quot;ex: 70.5&quot;&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;taille&quot;&gt;Taille (cm)&lt;/label&gt;&#10;                    &lt;input type=&quot;number&quot; id=&quot;taille&quot; name=&quot;taille&quot; placeholder=&quot;ex: 175&quot;&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Dossier Médical --&gt;&#10;            &lt;div class=&quot;form-section-title&quot;&gt; Dossier Médical&lt;/div&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;antecedents&quot;&gt;Antécédents Médicaux&lt;/label&gt;&#10;                &lt;textarea id=&quot;antecedents&quot; name=&quot;antecedents&quot; rows=&quot;3&quot; placeholder=&quot;ex: Diabète, Hypertension...&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;allergies&quot;&gt;Allergies&lt;/label&gt;&#10;                &lt;textarea id=&quot;allergies&quot; name=&quot;allergies&quot; rows=&quot;2&quot; placeholder=&quot;ex: Pénicilline, Arachides...&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;traitements&quot;&gt;Traitements en Cours&lt;/label&gt;&#10;                &lt;textarea id=&quot;traitements&quot; name=&quot;traitements&quot; rows=&quot;3&quot; placeholder=&quot;ex: Metformine 500mg, 2x/jour...&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Actions --&gt;&#10;            &lt;div class=&quot;form-actions&quot;&gt;&#10;                &lt;button type=&quot;button&quot; class=&quot;btn-secondary&quot; onclick=&quot;toggleForm()&quot;&gt;Annuler&lt;/button&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn-primary&quot;&gt; Enregistrer le Patient&lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- Liste des patients --&gt;&#10;    &lt;c:choose&gt;&#10;        &lt;c:when test=&quot;${empty patients}&quot;&gt;&#10;            &lt;div class=&quot;empty-state&quot;&gt;&#10;                &lt;div class=&quot;empty-state-icon&quot;&gt;&lt;/div&gt;&#10;                &lt;h3&gt;Aucun patient enregistré&lt;/h3&gt;&#10;                &lt;p&gt;Cliquez sur &quot;Ajouter un Patient&quot; pour commencer&lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/c:when&gt;&#10;        &lt;c:otherwise&gt;&#10;            &lt;table class=&quot;patients-table&quot;&gt;&#10;                &lt;thead&gt;&#10;                    &lt;tr&gt;&#10;                        &lt;th&gt;N° Sécu&lt;/th&gt;&#10;                        &lt;th&gt;Nom Complet&lt;/th&gt;&#10;                        &lt;th&gt;Date Naissance&lt;/th&gt;&#10;                        &lt;th&gt;Téléphone&lt;/th&gt;&#10;                        &lt;th&gt;Statut&lt;/th&gt;&#10;                        &lt;th&gt;Actions&lt;/th&gt;&#10;                    &lt;/tr&gt;&#10;                &lt;/thead&gt;&#10;                &lt;tbody&gt;&#10;                    &lt;c:forEach items=&quot;${patients}&quot; var=&quot;patient&quot;&gt;&#10;                        &lt;tr&gt;&#10;                            &lt;td&gt;${patient.numSecu}&lt;/td&gt;&#10;                            &lt;td&gt;&lt;strong&gt;${patient.nom} ${patient.prenom}&lt;/strong&gt;&lt;/td&gt;&#10;                            &lt;td&gt;${patient.dateNaissance}&lt;/td&gt;&#10;                            &lt;td&gt;${patient.telephone}&lt;/td&gt;&#10;                            &lt;td&gt;&#10;                                &lt;c:choose&gt;&#10;                                    &lt;c:when test=&quot;${patient.fileAttente}&quot;&gt;&#10;                                        &lt;span class=&quot;badge badge-attente&quot;&gt;⏳ En Attente&lt;/span&gt;&#10;                                    &lt;/c:when&gt;&#10;                                    &lt;c:otherwise&gt;&#10;                                        &lt;span class=&quot;badge badge-termine&quot;&gt;✅ Traité&lt;/span&gt;&#10;                                    &lt;/c:otherwise&gt;&#10;                                &lt;/c:choose&gt;&#10;                            &lt;/td&gt;&#10;                            &lt;td&gt;&#10;                                &lt;a class=&quot;btn-primary&quot;&#10;                                   href=&quot;${pageContext.request.contextPath}/infirmier/modifierPatient?id=${patient.id}&quot;&#10;                                   style=&quot;padding:8px 12px; font-size:0.9rem; text-decoration:none; display:inline-block;&quot;&gt;&#10;                                    ✏️ Modifier&#10;                                &lt;/a&gt;&#10;&#10;                                &lt;form action=&quot;${pageContext.request.contextPath}/infirmier/supprimerPatient&quot; method=&quot;post&quot;&#10;                                      style=&quot;display:inline-block; margin-left:8px;&quot;&#10;                                      onsubmit=&quot;return confirm('Confirmer la suppression du patient ?');&quot;&gt;&#10;                                    &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;${patient.id}&quot; /&gt;&#10;                                    &lt;button type=&quot;submit&quot; class=&quot;btn-secondary&quot;&#10;                                            style=&quot;padding:8px 12px; font-size:0.9rem; background:#e74c3c; border:none; color:white; border-radius:8px;&quot;&gt;&#10;                                        ️ Supprimer&#10;                                    &lt;/button&gt;&#10;                                &lt;/form&gt;&#10;                            &lt;/td&gt;&#10;                        &lt;/tr&gt;&#10;                    &lt;/c:forEach&gt;&#10;                &lt;/tbody&gt;&#10;            &lt;/table&gt;&#10;        &lt;/c:otherwise&gt;&#10;    &lt;/c:choose&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;script&gt;&#10;    function toggleForm() {&#10;        const form = document.getElementById('patientForm');&#10;        form.classList.toggle('active');&#10;&#10;        if (form.classList.contains('active')) {&#10;            form.scrollIntoView({ behavior: 'smooth', block: 'nearest' });&#10;        }&#10;    }&#10;&lt;/script&gt;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/webapp/WEB-INF/views/login.jsp">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/webapp/WEB-INF/views/login.jsp" />
              <option name="originalContent" value="&lt;%--&#10;  Created by IntelliJ IDEA.&#10;  User: LENOVO&#10;  Date: 14/10/2025&#10;  Time: 11:12&#10;  To change this template use File | Settings | File Templates.&#10;--%&gt;&#10;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Connexion - Télé-Expertise Médicale&lt;/title&gt;&#10;    &lt;style&gt;&#10;        * {&#10;            margin: 0;&#10;            padding: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        body {&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            min-height: 100vh;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            padding: 15px;&#10;        }&#10;&#10;        .container {&#10;            background: rgba(255, 255, 255, 0.95);&#10;            backdrop-filter: blur(10px);&#10;            border-radius: 20px;&#10;            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);&#10;            padding: 35px 40px;&#10;            width: 100%;&#10;            max-width: 420px;&#10;            animation: slideIn 0.5s ease-out;&#10;        }&#10;&#10;        @keyframes slideIn {&#10;            from {&#10;                opacity: 0;&#10;                transform: translateY(-20px);&#10;            }&#10;            to {&#10;                opacity: 1;&#10;                transform: translateY(0);&#10;            }&#10;        }&#10;&#10;        .header {&#10;            text-align: center;&#10;            margin-bottom: 30px;&#10;        }&#10;&#10;        .header h2 {&#10;            color: #667eea;&#10;            font-size: 1.8rem;&#10;            margin-bottom: 8px;&#10;            font-weight: 700;&#10;        }&#10;&#10;        .header p {&#10;            color: #666;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 18px;&#10;        }&#10;&#10;        .form-group label {&#10;            display: block;&#10;            color: #333;&#10;            font-weight: 600;&#10;            margin-bottom: 8px;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group input {&#10;            width: 100%;&#10;            padding: 14px 16px;&#10;            border: 2px solid #e0e0e0;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            transition: all 0.3s ease;&#10;            background: #f8f9fa;&#10;        }&#10;&#10;        .form-group input:focus {&#10;            outline: none;&#10;            border-color: #667eea;&#10;            background: white;&#10;            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);&#10;        }&#10;&#10;        .form-group input::placeholder {&#10;            color: #999;&#10;        }&#10;&#10;        .forgot-password {&#10;            text-align: right;&#10;            margin-top: -10px;&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .forgot-password a {&#10;            color: #667eea;&#10;            text-decoration: none;&#10;            font-size: 0.85rem;&#10;            font-weight: 500;&#10;            transition: color 0.3s ease;&#10;        }&#10;&#10;        .forgot-password a:hover {&#10;            color: #764ba2;&#10;            text-decoration: underline;&#10;        }&#10;&#10;        .btn-submit {&#10;            width: 100%;&#10;            padding: 15px;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            color: white;&#10;            border: none;&#10;            border-radius: 10px;&#10;            font-size: 1.1rem;&#10;            font-weight: 700;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;            margin-top: 10px;&#10;            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;&#10;        .btn-submit:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);&#10;        }&#10;&#10;        .btn-submit:active {&#10;            transform: translateY(0);&#10;        }&#10;&#10;        .footer-link {&#10;            text-align: center;&#10;            margin-top: 25px;&#10;            font-size: 0.9rem;&#10;            color: #666;&#10;        }&#10;&#10;        .footer-link a {&#10;            color: #667eea;&#10;            text-decoration: none;&#10;            font-weight: 600;&#10;            transition: color 0.3s ease;&#10;        }&#10;&#10;        .footer-link a:hover {&#10;            color: #764ba2;&#10;            text-decoration: underline;&#10;        }&#10;&#10;        .error-message {&#10;            background: #fee;&#10;            color: #c33;&#10;            padding: 12px;&#10;            border-radius: 8px;&#10;            margin-bottom: 20px;&#10;            font-size: 0.9rem;&#10;            border-left: 4px solid #c33;&#10;            animation: shake 0.3s ease;&#10;        }&#10;&#10;        @keyframes shake {&#10;            0%, 100% { transform: translateX(0); }&#10;            25% { transform: translateX(-5px); }&#10;            75% { transform: translateX(5px); }&#10;        }&#10;&#10;        .success-message {&#10;            background: #efe;&#10;            color: #3c3;&#10;            padding: 12px;&#10;            border-radius: 8px;&#10;            margin-bottom: 20px;&#10;            font-size: 0.9rem;&#10;            border-left: 4px solid #3c3;&#10;        }&#10;&#10;        .divider {&#10;            display: flex;&#10;            align-items: center;&#10;            text-align: center;&#10;            margin: 25px 0;&#10;            color: #999;&#10;            font-size: 0.85rem;&#10;        }&#10;&#10;        .divider::before,&#10;        .divider::after {&#10;            content: '';&#10;            flex: 1;&#10;            border-bottom: 1px solid #ddd;&#10;        }&#10;&#10;        .divider span {&#10;            padding: 0 10px;&#10;        }&#10;&#10;        /* Responsive */&#10;        @media (max-height: 650px) {&#10;            .container {&#10;                padding: 25px 35px;&#10;            }&#10;&#10;            .header h2 {&#10;                font-size: 1.5rem;&#10;            }&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;header&quot;&gt;&#10;            &lt;h2&gt; Connexion&lt;/h2&gt;&#10;            &lt;p&gt;Accédez à votre espace professionnel&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Messages d'erreur ou de succès --&gt;&#10;        &lt;% if (request.getAttribute(&quot;error&quot;) != null) { %&gt;&#10;            &lt;div class=&quot;error-message&quot;&gt;&#10;                ❌ &lt;%= request.getAttribute(&quot;error&quot;) %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;&#10;        &lt;% if (request.getAttribute(&quot;success&quot;) != null) { %&gt;&#10;            &lt;div class=&quot;success-message&quot;&gt;&#10;                ✅ &lt;%= request.getAttribute(&quot;success&quot;) %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;&#10;        &lt;form action=&quot;${pageContext.request.contextPath}/login&quot; method=&quot;post&quot;&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;email&quot;&gt; Email&lt;/label&gt;&#10;                &lt;input type=&quot;email&quot;&#10;                       id=&quot;email&quot;&#10;                       name=&quot;email&quot;&#10;                       placeholder=&quot;Entrez votre email&quot;&#10;                       required&#10;                       value=&quot;&lt;%= request.getParameter(&quot;email&quot;) != null ? request.getParameter(&quot;email&quot;) : &quot;&quot; %&gt;&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt; Mot de passe&lt;/label&gt;&#10;                &lt;input type=&quot;password&quot;&#10;                       id=&quot;password&quot;&#10;                       name=&quot;password&quot;&#10;                       placeholder=&quot;Entrez votre mot de passe&quot;&#10;                       required&#10;                       minlength=&quot;8&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;&#10;&#10;            &lt;button type=&quot;submit&quot; class=&quot;btn-submit&quot;&gt;&#10;                 Se connecter&#10;            &lt;/button&gt;&#10;        &lt;/form&gt;&#10;&#10;        &lt;div class=&quot;divider&quot;&gt;&#10;            &lt;span&gt;OU&lt;/span&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;footer-link&quot;&gt;&#10;            Pas encore de compte ? &lt;a href=&quot;/register&quot;&gt;S'inscrire&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;%--&#10;  Created by IntelliJ IDEA.&#10;  User: LENOVO&#10;  Date: 14/10/2025&#10;  Time: 11:12&#10;  To change this template use File | Settings | File Templates.&#10;--%&gt;&#10;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Connexion - Télé-Expertise Médicale&lt;/title&gt;&#10;    &lt;style&gt;&#10;        * {&#10;            margin: 0;&#10;            padding: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        body {&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            min-height: 100vh;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            padding: 15px;&#10;        }&#10;&#10;        .container {&#10;            background: rgba(255, 255, 255, 0.95);&#10;            backdrop-filter: blur(10px);&#10;            border-radius: 20px;&#10;            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);&#10;            padding: 35px 40px;&#10;            width: 100%;&#10;            max-width: 420px;&#10;            animation: slideIn 0.5s ease-out;&#10;        }&#10;&#10;        @keyframes slideIn {&#10;            from {&#10;                opacity: 0;&#10;                transform: translateY(-20px);&#10;            }&#10;            to {&#10;                opacity: 1;&#10;                transform: translateY(0);&#10;            }&#10;        }&#10;&#10;        .header {&#10;            text-align: center;&#10;            margin-bottom: 30px;&#10;        }&#10;&#10;        .header h2 {&#10;            color: #667eea;&#10;            font-size: 1.8rem;&#10;            margin-bottom: 8px;&#10;            font-weight: 700;&#10;        }&#10;&#10;        .header p {&#10;            color: #666;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 18px;&#10;        }&#10;&#10;        .form-group label {&#10;            display: block;&#10;            color: #333;&#10;            font-weight: 600;&#10;            margin-bottom: 8px;&#10;            font-size: 0.9rem;&#10;        }&#10;&#10;        .form-group input {&#10;            width: 100%;&#10;            padding: 14px 16px;&#10;            border: 2px solid #e0e0e0;&#10;            border-radius: 10px;&#10;            font-size: 1rem;&#10;            transition: all 0.3s ease;&#10;            background: #f8f9fa;&#10;        }&#10;&#10;        .form-group input:focus {&#10;            outline: none;&#10;            border-color: #667eea;&#10;            background: white;&#10;            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);&#10;        }&#10;&#10;        .form-group input::placeholder {&#10;            color: #999;&#10;        }&#10;&#10;        .forgot-password {&#10;            text-align: right;&#10;            margin-top: -10px;&#10;            margin-bottom: 20px;&#10;        }&#10;&#10;        .forgot-password a {&#10;            color: #667eea;&#10;            text-decoration: none;&#10;            font-size: 0.85rem;&#10;            font-weight: 500;&#10;            transition: color 0.3s ease;&#10;        }&#10;&#10;        .forgot-password a:hover {&#10;            color: #764ba2;&#10;            text-decoration: underline;&#10;        }&#10;&#10;        .btn-submit {&#10;            width: 100%;&#10;            padding: 15px;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            color: white;&#10;            border: none;&#10;            border-radius: 10px;&#10;            font-size: 1.1rem;&#10;            font-weight: 700;&#10;            cursor: pointer;&#10;            transition: all 0.3s ease;&#10;            margin-top: 10px;&#10;            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;&#10;        .btn-submit:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);&#10;        }&#10;&#10;        .btn-submit:active {&#10;            transform: translateY(0);&#10;        }&#10;&#10;        .footer-link {&#10;            text-align: center;&#10;            margin-top: 25px;&#10;            font-size: 0.9rem;&#10;            color: #666;&#10;        }&#10;&#10;        .footer-link a {&#10;            color: #667eea;&#10;            text-decoration: none;&#10;            font-weight: 600;&#10;            transition: color 0.3s ease;&#10;        }&#10;&#10;        .footer-link a:hover {&#10;            color: #764ba2;&#10;            text-decoration: underline;&#10;        }&#10;&#10;        .error-message {&#10;            background: #fee;&#10;            color: #c33;&#10;            padding: 12px;&#10;            border-radius: 8px;&#10;            margin-bottom: 20px;&#10;            font-size: 0.9rem;&#10;            border-left: 4px solid #c33;&#10;            animation: shake 0.3s ease;&#10;        }&#10;&#10;        @keyframes shake {&#10;            0%, 100% { transform: translateX(0); }&#10;            25% { transform: translateX(-5px); }&#10;            75% { transform: translateX(5px); }&#10;        }&#10;&#10;        .success-message {&#10;            background: #efe;&#10;            color: #3c3;&#10;            padding: 12px;&#10;            border-radius: 8px;&#10;            margin-bottom: 20px;&#10;            font-size: 0.9rem;&#10;            border-left: 4px solid #3c3;&#10;        }&#10;&#10;        .divider {&#10;            display: flex;&#10;            align-items: center;&#10;            text-align: center;&#10;            margin: 25px 0;&#10;            color: #999;&#10;            font-size: 0.85rem;&#10;        }&#10;&#10;        .divider::before,&#10;        .divider::after {&#10;            content: '';&#10;            flex: 1;&#10;            border-bottom: 1px solid #ddd;&#10;        }&#10;&#10;        .divider span {&#10;            padding: 0 10px;&#10;        }&#10;&#10;        /* Responsive */&#10;        @media (max-height: 650px) {&#10;            .container {&#10;                padding: 25px 35px;&#10;            }&#10;&#10;            .header h2 {&#10;                font-size: 1.5rem;&#10;            }&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;header&quot;&gt;&#10;            &lt;h2&gt; Connexion&lt;/h2&gt;&#10;            &lt;p&gt;Accédez à votre espace professionnel&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Messages d'erreur ou de succès --&gt;&#10;        &lt;% if (request.getAttribute(&quot;error&quot;) != null) { %&gt;&#10;            &lt;div class=&quot;error-message&quot;&gt;&#10;                ❌ &lt;%= request.getAttribute(&quot;error&quot;) %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;&#10;        &lt;% if (request.getAttribute(&quot;success&quot;) != null) { %&gt;&#10;            &lt;div class=&quot;success-message&quot;&gt;&#10;                ✅ &lt;%= request.getAttribute(&quot;success&quot;) %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;&#10;        &lt;form action=&quot;${pageContext.request.contextPath}/login&quot; method=&quot;post&quot;&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;email&quot;&gt; Email&lt;/label&gt;&#10;                &lt;input type=&quot;email&quot;&#10;                       id=&quot;email&quot;&#10;                       name=&quot;email&quot;&#10;                       placeholder=&quot;Entrez votre email&quot;&#10;                       required&#10;                       value=&quot;&lt;%= request.getParameter(&quot;email&quot;) != null ? request.getParameter(&quot;email&quot;) : &quot;&quot; %&gt;&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt; Mot de passe&lt;/label&gt;&#10;                &lt;input type=&quot;password&quot;&#10;                       id=&quot;password&quot;&#10;                       name=&quot;password&quot;&#10;                       placeholder=&quot;Entrez votre mot de passe&quot;&#10;                       required&#10;                       minlength=&quot;8&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;&#10;&#10;            &lt;button type=&quot;submit&quot; class=&quot;btn-submit&quot;&gt;&#10;                 Se connecter&#10;            &lt;/button&gt;&#10;        &lt;/form&gt;&#10;&#10;        &lt;div class=&quot;divider&quot;&gt;&#10;            &lt;span&gt;OU&lt;/span&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;footer-link&quot;&gt;&#10;            Pas encore de compte ? &lt;a href=&quot;${pageContext.request.contextPath}/register&quot;&gt;S'inscrire&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>